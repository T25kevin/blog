<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://kanoc.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://kanoc.gitee.io/"/>
  <updated>2025-06-09T03:57:07.693Z</updated>
  <id>https://kanoc.gitee.io/</id>
  
  <author>
    <name>Kanoc Ge</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>破解cloudflare拦截神器_puppeteer</title>
    <link href="https://kanoc.gitee.io/2025/02/25/%E7%A0%B4%E8%A7%A3cloudflare%E6%8B%A6%E6%88%AA%E7%A5%9E%E5%99%A8-puppeteer/"/>
    <id>https://kanoc.gitee.io/2025/02/25/%E7%A0%B4%E8%A7%A3cloudflare%E6%8B%A6%E6%88%AA%E7%A5%9E%E5%99%A8-puppeteer/</id>
    <published>2025-02-24T18:52:13.000Z</published>
    <updated>2025-06-09T03:57:07.693Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>破解cloudflare拦截神器_puppeteer</strong></font></p><span id="more"></span><h3 id="安装番外：安装node-js环境"><a href="#安装番外：安装node-js环境" class="headerlink" title="安装番外：安装node.js环境"></a>安装番外：安装node.js环境</h3><h4 id="安装nvm管理器"><a href="#安装nvm管理器" class="headerlink" title="安装nvm管理器"></a>安装<code>nvm</code>管理器</h4><ul><li>第1步：mac 安装：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><ul><li>第2_1步：命令安装：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span><br><span class="line">或</span><br><span class="line">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span><br></pre></td></tr></table></figure><ul><li>第2_2步：国内安装</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span><br><span class="line">或</span><br><span class="line">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span><br></pre></td></tr></table></figure><ul><li>第3步：添加环境</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、这是本地不存在配置文件的时候提示需要添加的配置</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、这是本地存在配置文件的时候提示需要添加的配置（推荐）</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure><ul><li>第4步：加载环境：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><ul><li>第5步：测试安装是否成功</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nvm -v</span><br><span class="line">或</span><br><span class="line">$ nvm use system</span><br></pre></td></tr></table></figure><ul><li>第6步：<code>nvm</code>相关命令</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install stable</span><br><span class="line">nvm install &lt;version&gt;     <span class="comment"># 安装指定版本 node</span></span><br><span class="line">nvm uninstall &lt;version&gt;   <span class="comment"># 删除指定版本 node</span></span><br><span class="line"></span><br><span class="line">nvm use &lt;version&gt;         <span class="comment"># 切换使用指定的版本 node</span></span><br><span class="line">nvm <span class="built_in">alias</span> default &lt;version&gt;   <span class="comment"># 永久版本 - 所有窗口生效指定版本</span></span><br><span class="line"></span><br><span class="line">nvm <span class="built_in">ls</span>    <span class="comment"># 列出所有安装的版本</span></span><br><span class="line">nvm ls-remote   <span class="comment"># 列出所有远程服务器的版本（官方 node version list）</span></span><br><span class="line">nvm current   <span class="comment"># 显示当前的版本</span></span><br><span class="line">nvm <span class="built_in">alias</span> &lt;name&gt; &lt;version&gt;   <span class="comment"># 给不同的版本号添加别名</span></span><br><span class="line">nvm <span class="built_in">unalias</span> &lt;name&gt;   <span class="comment"># 删除已定义的别名</span></span><br><span class="line"></span><br><span class="line">nvm reinstall-packages &lt;version&gt;     <span class="comment"># 在当前版本 node 环境下，重新全局安装指定版本号的 npm 包</span></span><br></pre></td></tr></table></figure><h3 id="第一步：安装puppeteer"><a href="#第一步：安装puppeteer" class="headerlink" title="第一步：安装puppeteer"></a>第一步：安装puppeteer</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i puppeteer</span><br></pre></td></tr></table></figure><h3 id="第二步：-安装插件-puppeteer-extra、puppeteer-extra-plugin-stealth"><a href="#第二步：-安装插件-puppeteer-extra、puppeteer-extra-plugin-stealth" class="headerlink" title="第二步： 安装插件 puppeteer-extra、puppeteer-extra-plugin-stealth"></a>第二步： 安装插件 puppeteer-extra、puppeteer-extra-plugin-stealth</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install puppeteer-extra puppeteer-extra-plugin-stealth express</span><br></pre></td></tr></table></figure><h3 id="第三步：使用nodejs获取数据："><a href="#第三步：使用nodejs获取数据：" class="headerlink" title="第三步：使用nodejs获取数据："></a>第三步：使用nodejs获取数据：</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">&#x27;puppeteer-extra&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StealthPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;puppeteer-extra-plugin-stealth&#x27;</span>)</span><br><span class="line">puppeteer.<span class="title function_">use</span>(<span class="title class_">StealthPlugin</span>())</span><br><span class="line"><span class="keyword">const</span> &#123;executablePath&#125; = <span class="built_in">require</span>(<span class="string">&#x27;puppeteer&#x27;</span>)</span><br><span class="line"></span><br><span class="line">puppeteer.<span class="title function_">launch</span>(&#123; <span class="attr">headless</span>: <span class="literal">false</span>, <span class="attr">executablePath</span>: <span class="title function_">executablePath</span>() &#125;).<span class="title function_">then</span>(<span class="keyword">async</span> browser =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>()</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">goto</span>(<span class="string">&#x27;https://xxx.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 Promise 来等待</span></span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">2000</span>))  <span class="comment">// 等待 2 秒</span></span><br><span class="line">    <span class="comment">// 获取页面的文本内容</span></span><br><span class="line">    <span class="keyword">const</span> pageContent = <span class="keyword">await</span> page.<span class="title function_">evaluate</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">innerText</span>;  <span class="comment">// 获取页面的所有文本</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印页面文本内容</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(pageContent);</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">screenshot</span>(&#123; <span class="attr">path</span>: <span class="string">&#x27;cointracker_home.png&#x27;</span>, <span class="attr">fullPage</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    <span class="keyword">await</span> browser.<span class="title function_">close</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="第四步：当然你也可以把他写成接口"><a href="#第四步：当然你也可以把他写成接口" class="headerlink" title="第四步：当然你也可以把他写成接口"></a>第四步：当然你也可以把他写成接口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.....</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;破解cloudflare拦截神器_puppeteer&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A7-逆向" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/"/>
    
    <category term="puppeteer" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/puppeteer/"/>
    
    
    <category term="nodejs" scheme="https://kanoc.gitee.io/tags/nodejs/"/>
    
    <category term="逆向" scheme="https://kanoc.gitee.io/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="puppeteer" scheme="https://kanoc.gitee.io/tags/puppeteer/"/>
    
    <category term="后端" scheme="https://kanoc.gitee.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你搭建Docker私有仓库Harbor</title>
    <link href="https://kanoc.gitee.io/2025/02/16/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%90%AD%E5%BB%BADocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93Harbor/"/>
    <id>https://kanoc.gitee.io/2025/02/16/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%90%AD%E5%BB%BADocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93Harbor/</id>
    <published>2025-02-16T11:37:35.000Z</published>
    <updated>2025-06-09T07:39:15.791Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>手把手教你搭建Docker私有仓库Harbor</strong></font></p><p>本文搬运自：<a href="https://www.cnblogs.com/sowler/p/18242819">手把手教你搭建Docker私有仓库Harbor - sowler - 博客园</a></p><span id="more"></span><h4 id="1、什么是Docker私有仓库"><a href="#1、什么是Docker私有仓库" class="headerlink" title="1、什么是Docker私有仓库"></a>1、什么是Docker私有仓库</h4><p>Docker私有仓库是用于存储和管理Docker镜像的私有存储库。Docker默认会有一个公共的仓库Docker Hub，而与Docker Hub不同，私有仓库是受限访问的，只有授权用户才能够上传、下载和管理其中的镜像。这种私有仓库可以部署在本地云环境中，用于组织内部开发、测试和生产环境中的容器镜像管理。保证数据安全性。</p><h4 id="2、Docker有哪些私有仓库"><a href="#2、Docker有哪些私有仓库" class="headerlink" title="2、Docker有哪些私有仓库"></a>2、Docker有哪些私有仓库</h4><p><strong>以下是一些常见的Docker私有仓库：</strong></p><ul><li><strong>Harbor</strong>：作为一个企业级的Docker Registry服务，Harbor提供了安全、可信赖的镜像存储和管理功能。它支持RBAC权限控制、镜像复制、镜像签名、漏洞扫描等功能。</li><li><strong>Docker Trusted Registry (DTR)</strong>：由Docker官方推出的企业级Docker私有仓库服务，与Docker Engine紧密集成，支持高度的安全性和可靠性。</li><li><strong>Portus</strong>：一个开源的Docker镜像管理和认证服务，提供用户管理、团队管理、镜像审核等功能，与Docker Registry兼容。</li><li><strong>Nexus Repository Manager</strong>：虽然主要是用于构建和管理Java组件，但也可以用作Docker私有仓库。它具有强大的存储管理和权限控制功能。</li><li><strong>GitLab Container Registry</strong>：GitLab集成了容器注册表功能，允许您存储、管理和分发Docker镜像。这是GitLab自带的功能，无需额外部署。</li><li><strong>AWS Elastic Container Registry (ECR)</strong>：如果使用AWS云服务，可以考虑使用AWS ECR作为私有仓库。它与AWS的其他服务集成紧密，对AWS用户来说是一个方便的选择。</li></ul><p>本篇使用Harbor搭建Docker私有仓库。</p><h4 id="3、Harbor简介"><a href="#3、Harbor简介" class="headerlink" title="3、Harbor简介"></a>3、Harbor简介</h4><p>Harbor是一个开源的企业级Docker Registry服务，它提供了一个安全、可信赖的仓库来存储和管理Docker镜像。Harbor翻译为中文名称为”庇护；居住;”。可以理解为是Docker镜像的”居住环境”或者是镜像的”庇护所”。Harbor最初由VMware公司开发，旨在解决企业级Docker镜像管理的安全和可信任性问题。VMware于2016年发布，在2017年，VMware将Harbor开源，这使得更广泛的社区和组织可以自由地使用和贡献代码。Harbor是一个成熟、功能丰富且安全可靠的企业级Docker Registry服务，为企业容器化应用的部署和管理提供了强大的支持。</p><p>Harbor官网地址：<a href="https://goharbor.io/">Harbor (goharbor.io)</a></p><p>Github开源地址：<a href="https://github.com/goharbor/harbor">https://github.com/goharbor/harbor</a></p><h4 id="4、Harbor下载"><a href="#4、Harbor下载" class="headerlink" title="4、Harbor下载"></a>4、Harbor下载</h4><h5 id="4-1、通过Linux命令下载"><a href="#4-1、通过Linux命令下载" class="headerlink" title="4.1、通过Linux命令下载"></a>4.1、通过Linux命令下载</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/goharbor/harbor/releases/download/v2.10.0/harbor-offline-installer-v2.10.0.tgz</span><br></pre></td></tr></table></figure><h5 id="4-2、GitHub下载"><a href="#4-2、GitHub下载" class="headerlink" title="4.2、GitHub下载"></a>4.2、GitHub下载</h5><p>下载地址：<a href="https://github.com/goharbor/harbor/releases">https://github.com/goharbor/harbor/releases</a> 下载离线版本</p><p><img src="https://s2.loli.net/2025/02/16/meHfNQrXgctVMnx.png" alt="img"></p><p>下载成功后，把包通过 <code>xftp</code> 上传到服务器。</p><h5 id="4-3、解压"><a href="#4-3、解压" class="headerlink" title="4.3、解压"></a>4.3、解压</h5><p>解压文件</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -zxvf harbor-offline-installer-v2.10.0.tgz </span><br></pre></td></tr></table></figure><h4 id="5、启动Harbor"><a href="#5、启动Harbor" class="headerlink" title="5、启动Harbor"></a>5、启动Harbor</h4><h5 id="5-1、修改配置文件"><a href="#5-1、修改配置文件" class="headerlink" title="5.1、修改配置文件"></a>5.1、修改配置文件</h5><p>复制<code>harbor.yml.tmpl</code> 文件并重命名为<code>harbor.yml</code>修改此配置文件，需要设置hostname、端口、数据库密码等。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> harbor.yml.tmpl harbor.yml <span class="comment">#拷贝</span></span><br><span class="line"></span><br><span class="line">vim harbor.yml</span><br></pre></td></tr></table></figure><p>修改配置文件：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改hostname的值，如果没有域名就使用本机IP地址</span></span><br><span class="line"><span class="attr">hostname:</span> <span class="number">192.168</span><span class="number">.42</span><span class="number">.133</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置启动端口号</span></span><br><span class="line"><span class="comment"># http related config </span></span><br><span class="line"><span class="attr">http:</span></span><br><span class="line">  <span class="comment"># port for http, default is 80. If https enabled, this port will redirect to https port</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有申请证书，需要隐藏https</span></span><br><span class="line"><span class="comment">#https:</span></span><br><span class="line">  <span class="comment"># https port for harbor, default is 443</span></span><br><span class="line"><span class="comment">#  port: 443</span></span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line"><span class="comment">#  certificate: /your/certificate/path</span></span><br><span class="line"><span class="comment">#  private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动成功后，admin用户登录密码</span></span><br><span class="line"><span class="comment"># Remember Change the admin password from UI after launching Harbor.</span></span><br><span class="line"><span class="attr">harbor_admin_password:</span> <span class="string">AdminHarbor12345</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2025/02/16/uflyIABjz3amckh.png" alt="img"></p><h5 id="5-2、启动"><a href="#5-2、启动" class="headerlink" title="5.2、启动"></a>5.2、启动</h5><p>配置文件修改成功后，执行 <code>install.sh</code> 脚本进行安装harbor</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./install.sh </span><br></pre></td></tr></table></figure><p>启动报错：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Step 0]: checking if docker is installed ...</span><br><span class="line"></span><br><span class="line">Note: docker version: 26.1.3</span><br><span class="line"></span><br><span class="line">[Step 1]: checking docker-compose is installed ...</span><br><span class="line">/opt/harbor/common.sh: line 119: docker-compose: command not found</span><br><span class="line">✖ Failed to parse docker-compose version.</span><br></pre></td></tr></table></figure><p>可以看到，该服务器安装的 <code>docker</code> 没有安装 <code>docker-compose</code> 插件</p><h5 id="5-3、安装docker-compose"><a href="#5-3、安装docker-compose" class="headerlink" title="5.3、安装docker-compose"></a>5.3、安装docker-compose</h5><p>进入<code>docker-compose</code> 官网下载执行文件，地址： <a href="https://github.com/docker/compose">https://github.com/docker/compose</a> 下载成功后，把可执行文件加入<code>Linux</code> 系统命令目录</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> docker-compose-linux-x86_64 /usr/local/bin/</span><br></pre></td></tr></table></figure><p>重命名：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> docker-compose-linux-x86_64 docker-compose</span><br></pre></td></tr></table></figure><p>授权：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>执行命令查看是否安装成功：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><p>如果需要卸载，直接删除即可：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><h5 id="5-4、再次启动"><a href="#5-4、再次启动" class="headerlink" title="5.4、再次启动"></a>5.4、再次启动</h5><p>再次执行 <code>./install.sh</code></p><p><img src="https://s2.loli.net/2025/02/16/ilOpYecKCy7wGTZ.png" alt="img"></p><p>提示安装成功。接下来就可以访问Harbor了。访问IP+端口：<a href="http://192.168.42.133:5000/">http://192.168.42.133:5000</a><br><img src="https://s2.loli.net/2025/02/16/FrRKhnkacDUV8lG.png" alt="img"></p><p>访问成功，由于Harbor是通过docker管理的，所以启动非常方便。如果首页访问成功说明Docker私有仓库已经部署成功了。</p><h4 id="6、Harbor-Web页面操作说明"><a href="#6、Harbor-Web页面操作说明" class="headerlink" title="6、Harbor Web页面操作说明"></a>6、Harbor Web页面操作说明</h4><p>默认用户名是admin，密码是启动时设置的密码：<code>AdminHarbor12345</code></p><p><img src="https://s2.loli.net/2025/02/16/9SnuUoJsKBzCFpA.png" alt="img"></p><p>登录成功进入主页面了。从系统首页可以看到系统分为三个菜单：项目、日志、系统管理。</p><h5 id="6-1、项目"><a href="#6-1、项目" class="headerlink" title="6.1、项目"></a>6.1、项目</h5><p>项目管理顾名思义就是用来管理项目的。可以为每一个开发项目创建一个私有项目库，然后把Docker镜像存储到指定的项目中，为每个项目实现项目镜像隔离。创建项目的时候，Harbor提供了公开库（public repository）和私有库（private repository）两种类型的镜像存储空间。</p><p><img src="https://s2.loli.net/2025/02/16/F34W9pclPBSkQHa.png" alt="img"></p><p>通过详情信息可以看到：<strong>公开库中的镜像是对所有用户可见和可访问的，任何人都可以查看和拉取其中的镜像。而私有库中的镜像则需要登录才能访问控制，只有被授权的用户或团队才能够查看、拉取和推送镜像。</strong> 可以根据需要创建相关的项目。</p><p><img src="https://s2.loli.net/2025/02/16/l1pfKPiZngO9sXW.png" alt="img"></p><p>项目创建成功后，可以点击进入项目。在里面可以为每个项目单独设置不同的配置信息。可以为每一个项目添加成员信息。</p><p><img src="https://s2.loli.net/2025/02/16/yBMfu4NG6PHYxdX.png" alt="img"></p><p>角色权限说明：</p><ul><li>**项目管理员（Project Administrator）：**拥有项目的最高权限，可以对项目进行全面管理，包括创建和删除项目、管理项目成员和权限、配置项目属性、查看项目日志等。</li><li>**维护人员（Maintainer）：**类似于项目管理员，但权限稍低，通常用于协助管理项目，可以进行项目的部分管理操作，如添加和删除镜像、配置镜像的复制和同步规则等。</li><li>**开发者（Developer）：**具有对项目中镜像仓库的读写权限，可以拉取、推送和删除镜像，以及管理部分项目配置，但不能进行项目管理操作。</li><li>**访客（Guest）：**只具有对项目中镜像仓库的只读权限，可以查看镜像和元数据，但无法对镜像进行修改或删除操作。通常用于分享项目或镜像给外部团队或用户。</li><li>**受限访客（Restricted Guest）：**是一种更加受限的访客角色，通常用于提供给外部用户或系统，具有对项目中镜像仓库的只读权限，但可能会限制访问的部分内容或功能。</li></ul><p>在右上角显示推送命令，可以通过提示命令进行docker镜像推送。</p><p><img src="https://s2.loli.net/2025/02/16/RFEucUsbXL2jYyG.png" alt="img"></p><h5 id="6-2、日志"><a href="#6-2、日志" class="headerlink" title="6.2、日志"></a>6.2、日志</h5><p>日志菜单就是记录用户操作日志信息的。</p><p><img src="https://s2.loli.net/2025/02/16/B7HKfokDjcG4yNE.png" alt="img"></p><h5 id="6-3、系统管理"><a href="#6-3、系统管理" class="headerlink" title="6.3、系统管理"></a>6.3、系统管理</h5><p>系统管理主要用来管理Harbor用户人员信息、镜像仓库的各种配置、权限和系统设置。</p><p><img src="https://s2.loli.net/2025/02/16/KfL2ViA7z8JyWvT.png" alt="img"></p><h4 id="7、Docker命令使用私有仓库"><a href="#7、Docker命令使用私有仓库" class="headerlink" title="7、Docker命令使用私有仓库"></a>7、Docker命令使用私有仓库</h4><h5 id="7-1、登录"><a href="#7-1、登录" class="headerlink" title="7.1、登录"></a>7.1、登录</h5><p>首先登录私有仓库地址：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker login  -u admin -p AdminHarbor12345 http://192.168.42.133:5000</span><br></pre></td></tr></table></figure><p>会报错：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">WARNING! Using --password via the CLI is insecure. Use --password-stdin.</span><br><span class="line">Error response from daemon: Get <span class="string">&quot;https://192.168.42.133:5000/v2/&quot;</span>: proxyconnect tcp: dial tcp 192.168.65.7:3128: connect: connection refused</span><br></pre></td></tr></table></figure><p>docker认为这个地址是不安全的，所以需要在docker守护进程配置文件中把该地址加入安全范围。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://ejes884z.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>:<span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;<span class="string">&quot;max-size&quot;</span>:<span class="string">&quot;1g&quot;</span>, <span class="string">&quot;max-file&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;,</span><br><span class="line">  <span class="string">&quot;live-restore&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;192.168.42.133:5000&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># insecure-registries 不安全的注册表配置一些不安全的地址信息，让Docker认为是安全的。多个地址使用 &quot;,&quot; 分割</span></span><br></pre></td></tr></table></figure><p>加入配置成功后，再次登录。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">WARNING! Using --password via the CLI is insecure. Use --password-stdin.</span><br><span class="line">WARNING! Your password will be stored unencrypted <span class="keyword">in</span> /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><p>通过输出发现登录成功。认证信息存储在 <code>~/.docker/config.json</code> 文件中，只要登录信息存在，登录会一直生效不需要每次推送拉取之前都登录。</p><h5 id="7-2、推送"><a href="#7-2、推送" class="headerlink" title="7.2、推送"></a>7.2、推送</h5><p>重新命名镜像名称</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker tag 94543a6c1aef 192.168.42.133:5000/blog_project/nginx:1.26.0</span><br></pre></td></tr></table></figure><p>推送</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker push 192.168.42.133:5000/blog_project/nginx:1.26.0</span><br></pre></td></tr></table></figure><p>查看Harbor仓库，推送成功。</p><p><img src="https://s2.loli.net/2025/02/16/rejyKzPso7aNGOw.png" alt="img"></p><h5 id="7-3、拉取"><a href="#7-3、拉取" class="headerlink" title="7.3、拉取"></a>7.3、拉取</h5><p>通过另一台服务器，使用 <code>docker pull</code>拉取镜像从私有仓库拉取镜像：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull 192.168.42.133:5000/blog_project/nginx:1.26.0</span><br></pre></td></tr></table></figure><p>拉取成功</p><p><img src="https://s2.loli.net/2025/02/16/VQRZWvfTwSmdIbj.png" alt="img"></p><p>查看下载数，发现已经更新了。</p><p><img src="https://s2.loli.net/2025/02/16/kmbMnuydhpYTw5a.png" alt="img"></p><h4 id="8、总结"><a href="#8、总结" class="headerlink" title="8、总结"></a>8、总结</h4><p>关于使用Harbor搭建Docker私有仓库就介绍完毕了，如果大家有兴趣可以查看一下其他搭建方式，然后在它们之间进行对比一下看看那种方式更适合。本篇为入门级Harbor的基础使用，其他功能可以自行研究。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;手把手教你搭建Docker私有仓库Harbor&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;本文搬运自：&lt;a href=&quot;https://www.cnblogs.com/sowler/p/18242819&quot;&gt;手把手教你搭建Docker私有仓库Harbor - sowler - 博客园&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A5-安装教程" scheme="https://kanoc.gitee.io/categories/A5-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
    <category term="Docker" scheme="https://kanoc.gitee.io/categories/A5-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/Docker/"/>
    
    
    <category term="docker" scheme="https://kanoc.gitee.io/tags/docker/"/>
    
    <category term="Harbor" scheme="https://kanoc.gitee.io/tags/Harbor/"/>
    
  </entry>
  
  <entry>
    <title>远程修改-ESXI-8.0-管理ip地址</title>
    <link href="https://kanoc.gitee.io/2024/08/18/%E8%BF%9C%E7%A8%8B%E4%BF%AE%E6%94%B9-ESXI-8-0-%E7%AE%A1%E7%90%86ip%E5%9C%B0%E5%9D%80/"/>
    <id>https://kanoc.gitee.io/2024/08/18/%E8%BF%9C%E7%A8%8B%E4%BF%AE%E6%94%B9-ESXI-8-0-%E7%AE%A1%E7%90%86ip%E5%9C%B0%E5%9D%80/</id>
    <published>2024-08-18T09:29:04.000Z</published>
    <updated>2025-06-09T04:15:50.087Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong><strong>远程修改 ESXI 8.0 管理ip地址</strong></strong></font></p><span id="more"></span><h3 id="场景："><a href="#场景：" class="headerlink" title="场景："></a><strong>场景：</strong></h3><p>适用于不方便在设备边操作而又需要修改管理地址的场景。</p><p>适用于不方便外接显示器的场景。</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><p>生产环境一定确定好网络配置信息否则可能会因为网络配置不正确导致无法正常访问。</p><h3 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a><strong>步骤：</strong></h3><h4 id="1-开启SSH远程访问"><a href="#1-开启SSH远程访问" class="headerlink" title="1.开启SSH远程访问"></a>1.开启SSH远程访问</h4><p>启用安全 <code>Shell</code>（也就是 <code>EXSi</code> 可以被 <code>SSH</code> 访问的功能）</p><p><img src="https://s2.loli.net/2024/08/18/jXvEum9nVrO1aq8.png" alt="img"></p><h4 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h4><ul><li>使用 <code>SecureCRT SSH2</code> 连接 <code>ESXi</code> 主机，现在使用 <code>dcui</code> 并没有任何反应，在 <code>Session</code> 标签栏右键点击 <code>Disconnect</code> 。</li><li>这里我测试用 <code>Finalshell</code> 也是完全没问题的</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The <span class="keyword">time</span> and <span class="built_in">date</span> of this login have been sent to the system logs.</span><br><span class="line"></span><br><span class="line">WARNING:</span><br><span class="line">   All commands run on the ESXi shell are logged and may be included <span class="keyword">in</span></span><br><span class="line">   support bundles. Do not provide passwords directly on the <span class="built_in">command</span> line.</span><br><span class="line">   Most tools can prompt <span class="keyword">for</span> secrets or accept them from standard input.</span><br><span class="line"></span><br><span class="line">VMware offers supported, powerful system administration tools.  Please</span><br><span class="line">see www.vmware.com/go/sysadmintools <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">The ESXi Shell can be disabled by an administrative user. See the</span><br><span class="line">vSphere Security documentation <span class="keyword">for</span> more information.</span><br><span class="line">[root@localhost:~] </span><br><span class="line">[root@localhost:~] dcui </span><br></pre></td></tr></table></figure><h4 id="3-连接到SSH"><a href="#3-连接到SSH" class="headerlink" title="3.连接到SSH"></a>3.连接到SSH</h4><ul><li>如果是使用 <code>Finalshell</code> 则可省略此步骤</li><li>在 <code>Session</code> 标签栏右键点击 <code>Session Option</code> 修改 <code>Terminal</code> 类型为 <code>Xterm</code> 后重新 <code>SSH2</code> 连接</li></ul><p><img src="https://s2.loli.net/2024/08/18/e7AEdlkaJ4ghpPt.png" alt="img"></p><h4 id="4-使用-dcui-工具"><a href="#4-使用-dcui-工具" class="headerlink" title="4.使用 dcui 工具"></a><strong>4.使用 <code>dcui</code> 工具</strong></h4><ul><li>再次使用 <code>dcui</code> 工具，这时已经可以进入 <code>EXSi</code> 的系统管理界面。</li></ul><p><img src="https://s2.loli.net/2024/08/18/MvdVH8r7BLy1Kfs.png" alt="img"></p><h4 id="5-登录到控制中心"><a href="#5-登录到控制中心" class="headerlink" title="5.登录到控制中心"></a>5.登录到控制中心</h4><ul><li>点击 <code>F2</code> 进行 <code>Customize System</code> 输入用户名、密码进入</li></ul><p><img src="https://s2.loli.net/2024/08/18/zO1Ehr7yvmHFgcC.png" alt="img"></p><h4 id="6-修改管理IP地址"><a href="#6-修改管理IP地址" class="headerlink" title="6.修改管理IP地址"></a>6.修改管理IP地址</h4><ul><li>选择 <code>Configure Management Network</code></li></ul><p><img src="https://s2.loli.net/2024/08/18/eyDBxsMbLrXRgHI.png" alt="img"></p><h4 id="7-选择-IPv4-Configuration"><a href="#7-选择-IPv4-Configuration" class="headerlink" title="7.选择 IPv4 Configuration"></a>7.选择 <code>IPv4 Configuration</code></h4><p><img src="https://s2.loli.net/2024/08/18/Z45nGUCewczAKby.png" alt="img"></p><h4 id="8-配置静态IP地址，然后点击回车"><a href="#8-配置静态IP地址，然后点击回车" class="headerlink" title="8.配置静态IP地址，然后点击回车"></a>8.配置静态IP地址，然后点击回车</h4><p><img src="https://s2.loli.net/2024/08/18/2m6uOn3w5T8WjUh.png" alt="img"></p><h4 id="9-点击-Esc-选择-Yes-应用配置并且重启管理网络"><a href="#9-点击-Esc-选择-Yes-应用配置并且重启管理网络" class="headerlink" title="9.点击 Esc 选择 Yes 应用配置并且重启管理网络"></a>9.点击 <code>Esc</code> 选择 <code>Yes</code> 应用配置并且重启管理网络</h4><p><img src="https://s2.loli.net/2024/08/18/8M4Ichq1xCzebUs.png" alt="img"></p><h4 id="10-此时已近可以用修改后的IP地址登录管理ESXi主机"><a href="#10-此时已近可以用修改后的IP地址登录管理ESXi主机" class="headerlink" title="10.此时已近可以用修改后的IP地址登录管理ESXi主机"></a>10.此时已近可以用修改后的IP地址登录管理ESXi主机</h4><p><img src="https://s2.loli.net/2024/08/18/OrPAf7l54TLonhd.png" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;&lt;strong&gt;远程修改 ESXI 8.0 管理ip地址&lt;/strong&gt;&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A8-工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="esxi" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/esxi/"/>
    
    
    <category term="esxi" scheme="https://kanoc.gitee.io/tags/esxi/"/>
    
  </entry>
  
  <entry>
    <title>内存小于-1G，宝塔面板-9.0.0-无法安装-mysql-解决方法</title>
    <link href="https://kanoc.gitee.io/2024/08/08/%E5%86%85%E5%AD%98%E5%B0%8F%E4%BA%8E-1G%EF%BC%8C%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF-9-0-0-%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85-mysql-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://kanoc.gitee.io/2024/08/08/%E5%86%85%E5%AD%98%E5%B0%8F%E4%BA%8E-1G%EF%BC%8C%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF-9-0-0-%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85-mysql-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2024-08-08T04:36:15.000Z</published>
    <updated>2025-06-09T03:53:29.745Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>内存小于 1G，宝塔面板<code>9.0.0</code>无法安装<code>mysql</code>解决方法</strong></font></p><span id="more"></span><p>宝塔官方限制了内存小于<code>1G</code>无法安装<code>mysql</code></p><p><font color=#00b2c2 size=5 face=宋体><strong>解决方法：</strong></font></p><p>找到路径：<code>/www/server/panel/class</code> 下的 <code>panelPlugin.py</code></p><p><img src="https://s2.loli.net/2024/08/09/XxNRyJokGCQa6e9.png" alt="image-20240808124006141"></p><p>定位到&gt;&gt;&gt; 关键字 <code>limit_list</code> 将如下注释掉即可</p><p><img src="https://s2.loli.net/2024/08/08/WutVP8LYhXv9rxN.png" alt="image-20240808123340813"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;内存小于 1G，宝塔面板&lt;code&gt;9.0.0&lt;/code&gt;无法安装&lt;code&gt;mysql&lt;/code&gt;解决方法&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A3-linux" scheme="https://kanoc.gitee.io/categories/A3-linux/"/>
    
    <category term="宝塔面板" scheme="https://kanoc.gitee.io/categories/A3-linux/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
    
    <category term="运维" scheme="https://kanoc.gitee.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="系统" scheme="https://kanoc.gitee.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="宝塔" scheme="https://kanoc.gitee.io/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>在CentOS-7上安装Go-1.22</title>
    <link href="https://kanoc.gitee.io/2024/06/11/%E5%9C%A8CentOS-7%E4%B8%8A%E5%AE%89%E8%A3%85Go-1-22/"/>
    <id>https://kanoc.gitee.io/2024/06/11/%E5%9C%A8CentOS-7%E4%B8%8A%E5%AE%89%E8%A3%85Go-1-22/</id>
    <published>2024-06-10T20:01:46.000Z</published>
    <updated>2025-06-09T10:41:43.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在CentOS-7上安装Go-1-22："><a href="#在CentOS-7上安装Go-1-22：" class="headerlink" title="在CentOS 7上安装Go 1.22："></a><font color=#00b2c2 size=5 face=宋体><strong>在CentOS 7上安装Go 1.22：</strong></font></h2><span id="more"></span><h3 id="在CentOS-7上安装Go-1-22-2的步骤如下："><a href="#在CentOS-7上安装Go-1-22-2的步骤如下：" class="headerlink" title="在CentOS 7上安装Go 1.22.2的步骤如下："></a>在CentOS 7上安装Go 1.22.2的步骤如下：</h3><h4 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h4><ol><li><p>确保你的<code>CentOS 7</code>系统已经更新到最新状态，可以通过以下命令进行更新：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum update</span><br></pre></td></tr></table></figure></li><li><p>检查系统是否已安装<code>Go</code>的旧版本，如果有，则先卸载：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum remove golang</span><br></pre></td></tr></table></figure></li></ol><h4 id="二、下载并安装Go-1-22-2"><a href="#二、下载并安装Go-1-22-2" class="headerlink" title="二、下载并安装Go 1.22.2"></a>二、下载并安装Go 1.22.2</h4><ol><li><p>访问Go的官方网站或使用提供的下载链接来获取<code>Go 1.22.2</code>的<code>Linux-amd64</code>版本。你可以直接通过<code>wget</code>命令下载：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/src  </span><br><span class="line">wget https://golang.google.cn/dl/go1.22.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压下载的Go压缩包到<code>/usr/local</code>目录下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tar -zxvf go1.22.2.linux-amd64.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure><p>这将把Go的安装文件解压到<code>/usr/local/go</code>目录下。</p></li></ol><h4 id="三、配置环境变量"><a href="#三、配置环境变量" class="headerlink" title="三、配置环境变量"></a>三、配置环境变量</h4><ol><li><p>打开<code>/etc/profile</code>文件，并在文件末尾添加以下配置：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GOROOT=/usr/local/go  </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin  </span><br><span class="line"><span class="built_in">export</span> GOPATH=/opt/go  <span class="comment"># 或者你可以设置为其他目录，作为你的工作区  </span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>应用更改：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>或者使用<code>su -</code>命令重新登录shell会话。</p></li></ol><h4 id="四、验证安装"><a href="#四、验证安装" class="headerlink" title="四、验证安装"></a>四、验证安装</h4><ol><li><p>在终端中输入<code>go version</code>来检查Go的版本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go version</span><br></pre></td></tr></table></figure><p>如果安装成功，你应该看到类似于<code>go version go1.22.2 linux/amd64</code>的输出。</p></li></ol><h4 id="五、解决依赖下载速度过慢的问题（可选）"><a href="#五、解决依赖下载速度过慢的问题（可选）" class="headerlink" title="五、解决依赖下载速度过慢的问题（可选）"></a>五、解决依赖下载速度过慢的问题（可选）</h4><p>如果你的网络环境中Go依赖包的下载速度过慢，你可以设置<code>GOPROXY</code>环境变量来使用国内的代理服务器，如<code>Goproxy.cn</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go <span class="built_in">env</span> -w GO111MODULE=on  </span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><p>这样设置后，Go的依赖包将会从指定的代理服务器下载，通常会有更快的下载速度。</p><p>以上就是在<code>CentOS 7</code>上安装<code>Go 1.22.2</code>的详细步骤。请注意，Go的最新版本可能已经更新，但上述步骤对于安装任何版本的Go都是通用的，只需将版本号替换为你要安装的版本即可。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;在CentOS-7上安装Go-1-22：&quot;&gt;&lt;a href=&quot;#在CentOS-7上安装Go-1-22：&quot; class=&quot;headerlink&quot; title=&quot;在CentOS 7上安装Go 1.22：&quot;&gt;&lt;/a&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;在CentOS 7上安装Go 1.22：&lt;/strong&gt;&lt;/font&gt;&lt;/h2&gt;</summary>
    
    
    
    <category term="_A5-安装教程" scheme="https://kanoc.gitee.io/categories/A5-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
    <category term="Golang" scheme="https://kanoc.gitee.io/categories/A5-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/Golang/"/>
    
    
    <category term="教程" scheme="https://kanoc.gitee.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="go" scheme="https://kanoc.gitee.io/tags/go/"/>
    
    <category term="安装" scheme="https://kanoc.gitee.io/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>【爬虫】巧用-js2py-（附带bug解决）</title>
    <link href="https://kanoc.gitee.io/2024/05/25/%E3%80%90%E7%88%AC%E8%99%AB%E3%80%91%E5%B7%A7%E7%94%A8-js2py-%EF%BC%88%E9%99%84%E5%B8%A6bug%E8%A7%A3%E5%86%B3%EF%BC%89/"/>
    <id>https://kanoc.gitee.io/2024/05/25/%E3%80%90%E7%88%AC%E8%99%AB%E3%80%91%E5%B7%A7%E7%94%A8-js2py-%EF%BC%88%E9%99%84%E5%B8%A6bug%E8%A7%A3%E5%86%B3%EF%BC%89/</id>
    <published>2024-05-24T16:51:51.000Z</published>
    <updated>2025-06-09T10:06:55.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【爬虫】巧用-js2py-（附带bug解决）："><a href="#【爬虫】巧用-js2py-（附带bug解决）：" class="headerlink" title="【爬虫】巧用-js2py-（附带bug解决）："></a><font color=#00b2c2 size=5 face=宋体><strong>【爬虫】巧用-js2py-（附带bug解决）：</strong></font></h1><span id="more"></span><p>本文搬运自CSDN：<a href="https://blog.csdn.net/sc_lilei/article/details/100122347">传送阵</a></p><p>项目地址： <a href="https://github.com/PiotrDabkowski/Js2Py">https://github.com/PiotrDabkowski/Js2Py</a></p><p>项目介绍：（根据github）此项目完全用Python编写，支持Python2&#x2F;3。可以在Python中执行JS代码，并获取JS对象值。</p><p>目前支持ES5，ES6仍在测试中。</p><p>一句话解释：一个纯Python的JS解释器。</p><p>推荐指数：四颗星  （博主用过其他的库如execjs, pyv8，多多少少都没有这个库的功能完备）</p><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install js2py</span><br></pre></td></tr></table></figure><p>本文主要介绍js2py的EvalJs对象，因为它是功能最完备的。</p><h2 id="1-执行简单的JS代码"><a href="#1-执行简单的JS代码" class="headerlink" title="1. 执行简单的JS代码"></a>1. 执行简单的JS代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> js2py</span><br><span class="line">js = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    a =1 </span></span><br><span class="line"><span class="string">    b =1</span></span><br><span class="line"><span class="string">    function f(x)&#123;</span></span><br><span class="line"><span class="string">        return x*x</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">ctx = js2py.EvalJs()  <span class="comment"># 初始化context对象</span></span><br><span class="line">ctx.execute(js)  <span class="comment"># 执行js</span></span><br><span class="line"><span class="built_in">print</span>(ctx.a)  <span class="comment"># &gt;&gt;1   获取js变量</span></span><br><span class="line"><span class="built_in">print</span>(ctx.f(<span class="number">9</span>))  <span class="comment"># &gt;&gt;81  执行js函数</span></span><br></pre></td></tr></table></figure><p>说明：EvalJs对象支持在同一个上下文中执行多次多段js代码，并能通过属性的方式获取js变量，非常好用。</p><h2 id="2-Python与JS对象交互"><a href="#2-Python与JS对象交互" class="headerlink" title="2. Python与JS对象交互"></a><strong>2. Python与JS对象交互</strong></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> js2py</span><br><span class="line">js = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    function f(arg1, arg2)&#123;</span></span><br><span class="line"><span class="string">        return arg1+arg2</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    end = f(a,b)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">ctx = js2py.EvalJs(context=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>&#125;)  <span class="comment"># 初始化context对象,通过字典形式传入python对象与js交互</span></span><br><span class="line">ctx.execute(js)  <span class="comment"># 执行js</span></span><br><span class="line"><span class="built_in">print</span>(ctx.end)  <span class="comment"># 3</span></span><br></pre></td></tr></table></figure><h2 id="3-在JS代码中引入外部JS库-需要安装nodejs环境"><a href="#3-在JS代码中引入外部JS库-需要安装nodejs环境" class="headerlink" title="3. 在JS代码中引入外部JS库(需要安装nodejs环境)"></a><strong>3. 在JS代码中引入外部JS库(需要安装nodejs环境)</strong></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> js2py</span><br><span class="line">js = <span class="string">&quot;&quot;&quot;var path = require(&#x27;path&#x27;)</span></span><br><span class="line"><span class="string">        p=path.join(&#x27;/foo/bar&#x27;, &#x27;file&#x27;)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">ctx = js2py.EvalJs(enable_require=<span class="literal">True</span>)  <span class="comment"># 开启require功能</span></span><br><span class="line">ctx.execute(js)  <span class="comment"># 执行js</span></span><br><span class="line"><span class="built_in">print</span>(ctx.p)  <span class="comment"># /foo/bar/file</span></span><br><span class="line">js = <span class="string">&quot;&quot;&quot;p = p+p&quot;&quot;&quot;</span></span><br><span class="line">ctx.execute(js)  <span class="comment"># 执行js</span></span><br><span class="line"><span class="built_in">print</span>(ctx.p)  <span class="comment"># /foo/bar/file/foo/bar/file</span></span><br></pre></td></tr></table></figure><p>关于require在js2py中使用有个bug，会在最后说明。</p><h2 id="4-Python与JS混编"><a href="#4-Python与JS混编" class="headerlink" title="4. Python与JS混编"></a><strong>4. Python与JS混编</strong></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CryptoJS = js2py.require(<span class="string">&#x27;crypto-js&#x27;</span>)</span><br><span class="line">data = [&#123;<span class="string">&#x27;id&#x27;</span>:<span class="number">1</span>&#125;, &#123;<span class="string">&#x27;id&#x27;</span>:<span class="number">2</span>&#125;]</span><br><span class="line">JSON = js2py.eval_js(<span class="string">&#x27;JSON&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), <span class="string">&#x27;secret key 123&#x27;</span>)</span><br><span class="line"><span class="built_in">bytes</span> = CryptoJS.AES.decrypt(ciphertext.toString(), <span class="string">&#x27;secret key 123&#x27;</span>)</span><br><span class="line">decryptedData = JSON.parse(<span class="built_in">bytes</span>.toString(CryptoJS.enc.Utf8)).to_list()</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(decryptedData)  <span class="comment"># [&#123;&#x27;id&#x27;:1&#125;, &#123;&#x27;id&#x27;:2&#125;]</span></span><br></pre></td></tr></table></figure><h2 id="5-最后"><a href="#5-最后" class="headerlink" title="5. 最后"></a>5. 最后</h2><p>在对js2py这个库的摸索使用中，发现了不少的问题(bug)，发现作者最后一次处理issue是在2018年11月了，超过20个issue未处理，博主也把遇到的问题提了两个上去，不知道能不能收到回复。</p><p>博主修复的bug：在windows 10 上使用这个库执行带有require语句的JS代码时遇到的错误</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Could <span class="keyword">not</span> link required node_modules</span><br></pre></td></tr></table></figure><p><strong>解决</strong>：经过反复测试与检查，发现是subprocess库在windows上执行shell命令有bug。具体是这样，在Python包安装路径下的js2py&#x2F;node_import.py的17行有以下代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">assert</span> subprocess.call(</span><br><span class="line">        <span class="string">&#x27;cd %s;npm install babel-core babel-cli babel-preset-es2015 babel-polyfill babelify browserify browserify-shim&#x27;</span></span><br><span class="line">        % <span class="built_in">repr</span>(DIRNAME),</span><br><span class="line">        shell=<span class="literal">True</span>,</span><br><span class="line">        cwd=DIRNAME) == <span class="number">0</span>, <span class="string">&#x27;Could not link required node_modules&#x27;</span></span><br></pre></td></tr></table></figure><p>其实这里作者的cd命令是多余的，因为cwd参数已经指定了命令的执行路径，无需再cd进入路径。</p><p>除了这里，还要修改这个文件第79行，一样的问题。</p><p>最后友情提醒，如果你的环境不能科学上网，你最好修改一下npm的源：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>避免网络问题导致不必要的麻烦，因为执行的JS代码依赖外部库时，这个库会在后台执行npm install操作(仅一次)。</p><p><strong>其他：</strong></p><p>因为博主也是搞爬虫的，所有有时会用到这样的库，这次就做一下完整的记录，助己助人。</p><p>本博客欢迎留言 :) </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;【爬虫】巧用-js2py-（附带bug解决）：&quot;&gt;&lt;a href=&quot;#【爬虫】巧用-js2py-（附带bug解决）：&quot; class=&quot;headerlink&quot; title=&quot;【爬虫】巧用-js2py-（附带bug解决）：&quot;&gt;&lt;/a&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;【爬虫】巧用-js2py-（附带bug解决）：&lt;/strong&gt;&lt;/font&gt;&lt;/h1&gt;</summary>
    
    
    
    <category term="_A7-逆向" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/"/>
    
    <category term="JavaScript" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/JavaScript/"/>
    
    
    <category term="Js" scheme="https://kanoc.gitee.io/tags/Js/"/>
    
    <category term="js2py" scheme="https://kanoc.gitee.io/tags/js2py/"/>
    
  </entry>
  
  <entry>
    <title>网站克隆工具-httrack</title>
    <link href="https://kanoc.gitee.io/2024/05/24/%E7%BD%91%E7%AB%99%E5%85%8B%E9%9A%86%E5%B7%A5%E5%85%B7-httrack/"/>
    <id>https://kanoc.gitee.io/2024/05/24/%E7%BD%91%E7%AB%99%E5%85%8B%E9%9A%86%E5%B7%A5%E5%85%B7-httrack/</id>
    <published>2024-05-23T19:36:36.000Z</published>
    <updated>2025-06-09T04:06:35.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网站克隆工具-httrack："><a href="#网站克隆工具-httrack：" class="headerlink" title="网站克隆工具-httrack："></a><font color=#00b2c2 size=5 face=宋体><strong>网站克隆工具-httrack：</strong></font></h2><span id="more"></span><p>本文搬运自<a href="https://blog.csdn.net/qq_32393893/article/details/105049728">kali-网站克隆工具-httrack_kali克隆网站-CSDN博客</a></p><p><font color=#f26522 size=4 face=宋体><strong>以下为 kali命令，如果是mac的同学，请自行使用<code>brew</code> 替换 <code>apt-get</code>即可</strong></font></p><p>HTTrack是一款网站克隆工具，主要用户克隆网站。渗透测试人员可以将目标网站克隆到本地进行查看，包含了所有的页面和离线文件，是可以进行社会工程学攻击，是钓鱼网站的利器。</p><h3 id="1，安装"><a href="#1，安装" class="headerlink" title="1，安装"></a>1，安装</h3><p><strong><code>sudo apt-get isntall httarck</code></strong></p><p><img src="https://s2.loli.net/2024/05/24/NputOms3gJha7IB.png"></p><p><font color=#b0171f size=3 face=宋体><strong>（如果已经安装了，就会像上图这样）</strong></font></p><h3 id="2，新建一个文件夹放置下载的网站"><a href="#2，新建一个文件夹放置下载的网站" class="headerlink" title="2，新建一个文件夹放置下载的网站"></a>2，新建一个文件夹放置下载的网站</h3><p><strong><code>mkdir site</code></strong></p><p><img src="https://s2.loli.net/2024/05/24/jcJ4LeKEPmY87bi.png"></p><h3 id="3，切换到新建的文件夹中"><a href="#3，切换到新建的文件夹中" class="headerlink" title="3，切换到新建的文件夹中"></a>3，切换到新建的文件夹中</h3><p><strong><code>cd site</code></strong></p><h3 id="4，启动httrack"><a href="#4，启动httrack" class="headerlink" title="4，启动httrack"></a>4，启动httrack</h3><p><strong><code>httrack</code></strong></p><h3 id="5，进行设置"><a href="#5，进行设置" class="headerlink" title="5，进行设置"></a>5，进行设置</h3><p><img src="https://s2.loli.net/2024/05/24/Phwa4YpE8u32LVJ.png"></p><h3 id="6，已经将网站保存在本地了"><a href="#6，已经将网站保存在本地了" class="headerlink" title="6，已经将网站保存在本地了"></a>6，已经将网站保存在本地了</h3><p><img src="https://s2.loli.net/2024/05/24/CigUqDpQuRf1VvJ.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;网站克隆工具-httrack：&quot;&gt;&lt;a href=&quot;#网站克隆工具-httrack：&quot; class=&quot;headerlink&quot; title=&quot;网站克隆工具-httrack：&quot;&gt;&lt;/a&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;网站克隆工具-httrack：&lt;/strong&gt;&lt;/font&gt;&lt;/h2&gt;</summary>
    
    
    
    <category term="_A8-工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="网站克隆工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E5%85%8B%E9%9A%86%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://kanoc.gitee.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="克隆" scheme="https://kanoc.gitee.io/tags/%E5%85%8B%E9%9A%86/"/>
    
    <category term="网站" scheme="https://kanoc.gitee.io/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>收藏-常用脚本</title>
    <link href="https://kanoc.gitee.io/2024/05/11/%E6%94%B6%E8%97%8F-%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    <id>https://kanoc.gitee.io/2024/05/11/%E6%94%B6%E8%97%8F-%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/</id>
    <published>2024-05-11T05:02:13.000Z</published>
    <updated>2025-06-09T04:02:31.963Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>收藏-常用脚本：</strong></font></p><span id="more"></span><p>[Python、Go 打包运行代码 ](<a href="https://blog.teadan.com/2024/04/02/Python%E3%80%81Go">https://blog.teadan.com/2024/04/02/Python、Go</a> 打包运行代码&#x2F;)</p><p><a href="https://blog.teadan.com/2024/03/20/python-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E5%8C%85(requirements.txt)%E7%9A%84%E5%AF%BC%E5%87%BA%E4%B8%8E%E5%AE%89%E8%A3%85/">python-虚拟环境包(requirements.txt)的导出与安装 </a></p><p><a href="https://blog.teadan.com/2023/03/20/Nginx%E8%B7%A8%E5%9F%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">Nginx跨域解决方案 </a></p><p><a href="https://blog.teadan.com/2023/05/22/Django-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">Django_学习笔记 </a></p><p><a href="https://blog.teadan.com/2023/03/20/%E5%85%B3%E4%BA%8EJet-Brains%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC%E8%8E%B7%E5%8F%96/">关于Jet Brains历史版本获取 </a></p><p><a href="https://blog.teadan.com/2024/03/20/django-%E8%B7%A8%E5%9F%9F%E6%94%AF%E6%8C%81%E9%85%8D%E7%BD%AE/">django-跨域支持配置 </a></p><p><a href="https://blog.teadan.com/2023/03/20/%E5%AE%9D%E5%A1%94%E9%83%A8%E7%BD%B2Django%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4Supervisor/">宝塔部署Django进程守护Supervisor</a></p><p><a href="https://blog.teadan.com/2024/05/01/pip-%E6%9B%B4%E6%8D%A2%E6%BA%90/">pip-更换源 </a></p><p><a href="https://blog.teadan.com/2024/04/24/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7-%E4%BB%A3%E7%A0%81%E7%B1%BB/">必备工具-代码类 </a></p><p><a href="https://blog.teadan.com/2024/04/13/%E4%B8%80%E9%94%AE%E6%90%9E%E5%AE%9A%E5%A4%9A%E5%B1%82%E8%B7%B3%E6%9D%BF%E8%AE%BF%E9%97%AE%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8/">一键搞定多层跳板访问目标机器 </a></p><p><a href="https://blog.teadan.com/2024/01/25/Shadowsocks-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%EF%BC%88%E5%9B%9B%E5%90%88%E4%B8%80%EF%BC%89/">Shadowsocks 一键安装脚本（四合一） </a></p><p><a href="https://blog.teadan.com/2023/07/11/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7/">必备工具 </a></p><p><a href="https://blog.teadan.com/2023/06/13/centos%E6%B5%8B%E7%BD%91%E9%80%9F%E8%84%9A%E6%9C%AC/">centos测网速脚本 </a></p><p><a href="https://blog.teadan.com/2023/05/27/python-%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E8%BF%94%E5%9B%9E%E5%80%BC/">python 时间格式返回值 </a></p><p><a href="https://blog.teadan.com/2023/03/20/ThreadPoolExecutor%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%BF%94%E5%9B%9E%E5%80%BC/">ThreadPoolExecutor多线程返回值 </a></p><p><a href="https://blog.teadan.com/2023/03/20/V2ray%E5%AE%98%E6%96%B9%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC-2021-10/">V2ray官方一键安装脚本(2021&#x2F;10) </a></p><p><a href="https://blog.teadan.com/2023/03/20/m3u8%E4%B8%8B%E8%BD%BD%E5%8D%8F%E8%AE%AE%E4%B8%8D%E5%9C%A8%E7%99%BD%E5%90%8D%E5%8D%95/">m3u8下载协议不在白名单 </a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;收藏-常用脚本：&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A8-工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="常用脚本" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="收藏" scheme="https://kanoc.gitee.io/tags/%E6%94%B6%E8%97%8F/"/>
    
    <category term="常用脚本" scheme="https://kanoc.gitee.io/tags/%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>移动光猫-吉比特 H3-1S H3-2S获取超级密码方法(亲测可用！！)</title>
    <link href="https://kanoc.gitee.io/2024/04/15/%E7%A7%BB%E5%8A%A8%E5%85%89%E7%8C%AB-%E5%90%89%E6%AF%94%E7%89%B9-H3-1S-H3-2S%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95-%E4%BA%B2%E6%B5%8B%E5%8F%AF%E7%94%A8%EF%BC%81%EF%BC%81/"/>
    <id>https://kanoc.gitee.io/2024/04/15/%E7%A7%BB%E5%8A%A8%E5%85%89%E7%8C%AB-%E5%90%89%E6%AF%94%E7%89%B9-H3-1S-H3-2S%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95-%E4%BA%B2%E6%B5%8B%E5%8F%AF%E7%94%A8%EF%BC%81%EF%BC%81/</id>
    <published>2024-04-15T11:56:17.000Z</published>
    <updated>2025-06-09T07:41:53.514Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong><strong>移动光猫-吉比特 H3-1S H3-2S获取超级密码方法</strong>:</strong></font></p><span id="more"></span><p><font color=#f26522 size=4 face=宋体><strong>1.使用光猫背后的普通用户名登录进光猫，浏览器复制以下链接打开</strong></font></p><p><a href="http://192.168.1.1/usr=CMCCAdmin&psw=aDm8H%MdA&cmd=1&telnet.gch">http://192.168.1.1/usr=CMCCAdmin ... md=1&amp;telnet.gch</a></p><p><font color=#f26522 size=4 face=宋体><strong>2.电脑启用 telnet</strong></font></p><p><img src="https://s2.loli.net/2024/05/09/uKpnNMcji45sfxv.png" alt="开启telnet成功"></p><p><font color=#f26522 size=4 face=宋体><strong>3.通过telnet进入光猫</strong></font></p><p>输入：</p><p><code>telnet 192.168.1.1</code></p><p>用户名、密码如下：<br><code>CMCCAdmin</code><br><code>aDm8H%MdA</code></p><p><font color=red size=3 face=宋体><strong>注意：密码默认不显示 不需要重复输入</strong></font></p><p><img src="https://s2.loli.net/2024/05/09/4riCBgt57fanybh.png" alt="连接状态"><br><font color=#f26522 size=4 face=宋体><strong>4.查看一下登陆信息,可以看到账号密码全部进行了加密</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sidbg 1 DB p DevAuthInfo</span><br></pre></td></tr></table></figure><p>输入上面的命令后将会显示下面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;Tbl name=<span class="string">&quot;DevAuthInfo&quot;</span> RowCount=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">&lt;Row No=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;ViewName&quot;</span> val=<span class="string">&quot;IGD.AU1&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Enable&quot;</span> val=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;IsOnline&quot;</span> val=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;AppID&quot;</span> val=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;User&quot;</span> val=<span class="string">&quot;******&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Pass&quot;</span> val=<span class="string">&quot;******&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Level&quot;</span> val=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Extra&quot;</span> val=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;ExtraInt&quot;</span> val=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">&lt;/Row&gt;</span><br><span class="line">&lt;Row No=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;ViewName&quot;</span> val=<span class="string">&quot;IGD.AU2&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Enable&quot;</span> val=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;IsOnline&quot;</span> val=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;AppID&quot;</span> val=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;User&quot;</span> val=<span class="string">&quot;******&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Pass&quot;</span> val=<span class="string">&quot;******&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Level&quot;</span> val=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;Extra&quot;</span> val=<span class="string">&quot;&quot;</span>/&gt;</span><br><span class="line">&lt;DM name=<span class="string">&quot;ExtraInt&quot;</span> val=<span class="string">&quot;0&quot;</span>/&gt;</span><br><span class="line">&lt;/Row&gt;</span><br><span class="line">&lt;/Tbl&gt; </span><br></pre></td></tr></table></figure><p><font color=#f26522 size=4 face=宋体><strong>5.修改CMCCAdmin用户的登录密码</strong></font></p><p>输入下面的命令更改CMCCAdmin的密码：</p><p>sidbg 1 DB set DevAuthInfo 0 Pass admin</p><p>Pass后面是CMCCAdmin的登录密码</p><p>再输入下面的命令保存即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sidbg 1 DB save</span><br></pre></td></tr></table></figure><p>完成后即可使用CMCCAdmin+更改后的密码即可登录光猫后台。</p><p>祝各位使用愉快！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;&lt;strong&gt;移动光猫-吉比特 H3-1S H3-2S获取超级密码方法&lt;/strong&gt;:&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_S9-折腾" scheme="https://kanoc.gitee.io/categories/S9-%E6%8A%98%E8%85%BE/"/>
    
    <category term="光猫" scheme="https://kanoc.gitee.io/categories/S9-%E6%8A%98%E8%85%BE/%E5%85%89%E7%8C%AB/"/>
    
    
    <category term="运维" scheme="https://kanoc.gitee.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="移动" scheme="https://kanoc.gitee.io/tags/%E7%A7%BB%E5%8A%A8/"/>
    
    <category term="光猫" scheme="https://kanoc.gitee.io/tags/%E5%85%89%E7%8C%AB/"/>
    
    <category term="超级用户" scheme="https://kanoc.gitee.io/tags/%E8%B6%85%E7%BA%A7%E7%94%A8%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>一键搞定多层跳板访问目标机器</title>
    <link href="https://kanoc.gitee.io/2024/04/13/%E4%B8%80%E9%94%AE%E6%90%9E%E5%AE%9A%E5%A4%9A%E5%B1%82%E8%B7%B3%E6%9D%BF%E8%AE%BF%E9%97%AE%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8/"/>
    <id>https://kanoc.gitee.io/2024/04/13/%E4%B8%80%E9%94%AE%E6%90%9E%E5%AE%9A%E5%A4%9A%E5%B1%82%E8%B7%B3%E6%9D%BF%E8%AE%BF%E9%97%AE%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8/</id>
    <published>2024-04-13T06:47:07.000Z</published>
    <updated>2025-06-09T07:58:48.542Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>一、免密码登录ssh</strong></font></p><span id="more"></span><ul><li><p><font color=#f26522 size=4 face=宋体><strong>1、生成钥匙对</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成key，但首先你得安装ssh</span></span><br><span class="line">ssh-keygen -t rsa -b 2048</span><br><span class="line"><span class="comment"># 一路按回车换行，终端输出大概是这样</span></span><br><span class="line"><span class="comment"># Generating public/private rsa key pair.</span></span><br><span class="line"><span class="comment"># Enter file in which to save the key (/home/username/.ssh/id_rsa): </span></span><br><span class="line"><span class="comment"># Enter passphrase (empty for no passphrase): </span></span><br><span class="line"><span class="comment"># Enter same passphrase again: </span></span><br><span class="line"><span class="comment"># Your identification has been saved in /home/username/.ssh/id_rsa.</span></span><br><span class="line"><span class="comment"># Your public key has been saved in /home/username/.ssh/id_rsa.pub.</span></span><br></pre></td></tr></table></figure></li><li><p><font color=#f26522 size=4 face=宋体><strong>2、将共钥传输给远端主机</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># id@server 是你的用户名和远端主机地址喔</span></span><br><span class="line">ssh-copy-id <span class="built_in">id</span>@server</span><br><span class="line"><span class="comment"># 按规定输入远端主机密码后，成功的话能看到终端输出</span></span><br><span class="line"><span class="comment"># Number of key(s) added:        1</span></span><br></pre></td></tr></table></figure></li></ul><p><font color=red size=4 face=宋体><strong>PS：</strong></font><font color=#b0171f size=3 face=宋体><strong>公钥储存在远端主机这个文件里：.ssh&#x2F;authorized_keys，现在当你重新再通过SSH连接到远端主机时，已经不再需要密码啦！</strong></font></p><p><font color=#00b2c2 size=5 face=宋体><strong>二、使用<code>跳板</code>连接到<code>目标机器</code>(ProxyJump)</strong></font></p><p> 本节内容参考自：<a href="https://link.zhihu.com/?target=https://woodenrobot.me/2019/07/18/ssh-proxyjump/">SSH 通过跳板机直接访问内网机器</a>、<a href="https://atomlab.org/posts/code/ssh-trick/">SSH使用技巧-免密码&#x2F;自动代理</a></p><p><font color=red size=4 face=宋体><strong>PS：</strong></font><font color=#b0171f size=3 face=宋体><strong>需要 <code>OpenSSH 7.3</code> 以上版本才可以使用 <code>ProxyJump</code>, 使用下列命令查看<code>OpenSSH</code> 版本：</strong></font></p><ul><li><p><font color=#f26522 size=4 face=宋体><strong>1、直接命令<code>临时使用</code>：</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -J [email protected]:port1,[email protected]:port2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以直接使用上述命令通过跳板机直接登录内网机器，比如：</span></span><br><span class="line"><span class="comment"># ssh username@目标机器IP -p 22 -J username@跳板机IP:22</span></span><br><span class="line"><span class="comment"># 如果需要通过多个跳板机则以 , 分割：</span></span><br><span class="line"><span class="comment"># ssh username@目标机器IP -p 22 -J username1@跳板机IP1:22,username2@跳板机IP2:22</span></span><br></pre></td></tr></table></figure></li><li><p><font color=#f26522 size=4 face=宋体><strong>2、长期使用<code>配置文件</code>||<code>~\.ssh\config</code>：</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host tiaoban1    <span class="comment"># 代表跳板机 1</span></span><br><span class="line">    HostName 跳板机 1 的 IP</span><br><span class="line">    Port 22    <span class="comment"># ssh 连接端口</span></span><br><span class="line">    User username1    <span class="comment"># 跳板机 1 的用户名</span></span><br><span class="line"></span><br><span class="line">Host tiaoban2    <span class="comment"># 代表跳板机 2</span></span><br><span class="line">    HostName 跳板机 2 的 IP</span><br><span class="line">    Port 22    <span class="comment"># ssh 连接端口</span></span><br><span class="line">    User username2    <span class="comment"># 跳板机 2 的用户名</span></span><br><span class="line"></span><br><span class="line">Host target    <span class="comment"># 代表目标机器的名字</span></span><br><span class="line">    HostName 目标机器 IP    <span class="comment"># 这个是目标机器的 IP</span></span><br><span class="line">    Port 22    <span class="comment"># 目标机器 ssh 的端口</span></span><br><span class="line">    User username_target    <span class="comment"># 目标机器的用户名</span></span><br><span class="line">    ProxyJump tiaoban1,tiaoban2</span><br><span class="line"></span><br><span class="line">Host 10.10.0.*    <span class="comment"># 使用通配符 * 代表 10.10.0.1 - 10.10.0.255</span></span><br><span class="line">    Port 22    <span class="comment"># 服务器端口</span></span><br><span class="line">    User username    <span class="comment"># 服务器用户名</span></span><br><span class="line">    ProxyJump tiaoban1,tiaoban2</span><br></pre></td></tr></table></figure></li><li><p><font color=#f26522 size=4 face=宋体><strong>3、使用方法：</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh tiaoban1   <span class="comment"># 连接到跳板机 1</span></span><br><span class="line"></span><br><span class="line">ssh target   <span class="comment"># 连接到目标机器</span></span><br></pre></td></tr></table></figure></li></ul><p><font color=#00b2c2 size=5 face=宋体><strong>三、安装<code>expect</code>交互</strong></font></p><p> 本节内容参考自：<a href="https://blog.csdn.net/zhangjikuan/article/details/51105166">Shell脚本交互之：自动输入密码</a></p><p><font color=red size=4 face=宋体><strong>PS：</strong></font><font color=#b0171f size=3 face=宋体><strong>用于与控制台交互，如果上面的内容无法 免密登录服务器，可以用这种方法</strong></font></p><ul><li><p><font color=#f26522 size=4 face=宋体><strong>1、安装 <code>expect</code>：</strong></font></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ubuntu or debian</span></span><br><span class="line">sudo apt-get install expect</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">centos7</span></span><br><span class="line">yum install expect</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mac os  // 没有brew 去搜一下，怎么安装 brew</span></span><br><span class="line">brew install expect</span><br></pre></td></tr></table></figure></li><li><p><font color=#f26522 size=4 face=宋体><strong>2、语法：</strong></font></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect -f</span></span><br><span class="line"><span class="comment"># #!/bin/expect   //原文此处是错误，导致 no such file or directory  正确的写法是 #!/usr/bin/expect -f</span></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">timeout</span> 30</span><br><span class="line">spawn ssh -l jikuan.zjk 10.125.25.189</span><br><span class="line">expect <span class="string">&quot;password:&quot;</span></span><br><span class="line">send <span class="string">&quot;zjk123\r&quot;</span></span><br><span class="line">interact</span><br></pre></td></tr></table></figure></li><li><p><font color=#f26522 size=4 face=宋体><strong>3、说明：</strong></font></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在运行脚本时候要expect  file，不能sh file了</span><br><span class="line">上面语句第一句是设定超时时间为30s，spawn是expect的语句，执行命令前都要加这句</span><br><span class="line">expect &quot;password：&quot;这句意思是交互获取是否返回password：关键字，因为在执行ssh时会返回输入password的提示：jikuan.zjk@10.125.25.189&#x27;s password:</span><br><span class="line">send就是将密码zjk123发送过去</span><br><span class="line">interact代表执行完留在远程控制台，不加这句执行完后返回本地控制台</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;一、免密码登录ssh&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A5-安装教程" scheme="https://kanoc.gitee.io/categories/A5-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
    <category term="SSH" scheme="https://kanoc.gitee.io/categories/A5-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/SSH/"/>
    
    
    <category term="跳板" scheme="https://kanoc.gitee.io/tags/%E8%B7%B3%E6%9D%BF/"/>
    
    <category term="ssh" scheme="https://kanoc.gitee.io/tags/ssh/"/>
    
    <category term="运维" scheme="https://kanoc.gitee.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>禹神 Vue3 前端笔记</title>
    <link href="https://kanoc.gitee.io/2024/02/22/%E7%A6%B9%E7%A5%9E-Vue3-%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    <id>https://kanoc.gitee.io/2024/02/22/%E7%A6%B9%E7%A5%9E-Vue3-%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/</id>
    <published>2024-02-22T02:21:17.000Z</published>
    <updated>2025-06-09T04:14:58.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Vue3简介"><a href="#1-Vue3简介" class="headerlink" title="1. Vue3简介"></a>1. Vue3简介</h1><span id="more"></span><ul><li><p>2020年9月18日，<code>Vue.js</code>发布版<code>3.0</code>版本，代号：<code>One Piece</code>（n</p></li><li><p>经历了：<a href="https://github.com/vuejs/core/commits/main">4800+次提交</a>、<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs">40+个RFC</a>、<a href="https://github.com/vuejs/vue-next/pulls?q=is:pr+is:merged+-author:app/dependabot-preview+">600+次PR</a>、<a href="https://github.com/vuejs/core/graphs/contributors">300+贡献者</a></p></li><li><p>官方发版地址：<a href="https://github.com/vuejs/core/releases/tag/v3.0.0">Release v3.0.0 One Piece · vuejs&#x2F;core</a></p></li><li><p>截止2023年10月，最新的公开版本为：<code>3.3.4</code></p><img src="https://s2.loli.net/2024/02/22/GLPQrNvRBaWe9Ts.png" alt="image.png" style="zoom:30%;" /></li></ul><h2 id="1-1-【性能的提升】"><a href="#1-1-【性能的提升】" class="headerlink" title="1.1. 【性能的提升】"></a>1.1. 【性能的提升】</h2><ul><li><p>打包大小减少<code>41%</code>。</p></li><li><p>初次渲染快<code>55%</code>, 更新渲染快<code>133%</code>。</p></li><li><p>内存减少<code>54%</code>。</p></li></ul><h2 id="1-2-【-源码的升级】"><a href="#1-2-【-源码的升级】" class="headerlink" title="1.2.【 源码的升级】"></a>1.2.【 源码的升级】</h2><ul><li><p>使用<code>Proxy</code>代替<code>defineProperty</code>实现响应式。</p></li><li><p>重写虚拟<code>DOM</code>的实现和<code>Tree-Shaking</code>。</p></li></ul><h2 id="1-3-【拥抱TypeScript】"><a href="#1-3-【拥抱TypeScript】" class="headerlink" title="1.3. 【拥抱TypeScript】"></a>1.3. 【拥抱TypeScript】</h2><ul><li><code>Vue3</code>可以更好的支持<code>TypeScript</code>。</li></ul><h2 id="1-4-【新的特性】"><a href="#1-4-【新的特性】" class="headerlink" title="1.4. 【新的特性】"></a>1.4. 【新的特性】</h2><ol><li><p><code>Composition API</code>（组合<code>API</code>）：</p><ul><li><p><code>setup</code></p></li><li><p><code>ref</code>与<code>reactive</code></p></li><li><p><code>computed</code>与<code>watch</code></p><p>……</p></li></ul></li><li><p>新的内置组件：</p><ul><li><p><code>Fragment</code></p></li><li><p><code>Teleport</code></p></li><li><p><code>Suspense</code></p><p>……</p></li></ul></li><li><p>其他改变：</p><ul><li><p>新的生命周期钩子</p></li><li><p><code>data</code> 选项应始终被声明为一个函数</p></li><li><p>移除<code>keyCode</code>支持作为<code> v-on</code> 的修饰符</p><p>……</p></li></ul></li></ol><h1 id="2-创建Vue3工程"><a href="#2-创建Vue3工程" class="headerlink" title="2. 创建Vue3工程"></a>2. 创建Vue3工程</h1><h2 id="2-1-【基于-vue-cli-创建】"><a href="#2-1-【基于-vue-cli-创建】" class="headerlink" title="2.1. 【基于 vue-cli 创建】"></a>2.1. 【基于 vue-cli 创建】</h2><p>点击查看<a href="https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create">官方文档</a></p><blockquote><p>备注：目前<code>vue-cli</code>已处于维护模式，官方推荐基于 <code>Vite</code> 创建项目。</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上</span></span></span><br><span class="line">vue --version</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装或者升级你的@vue/cli</span></span> </span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 执行创建命令</span></span></span><br><span class="line">vue create vue_test</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#  随后选择3.x</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#  Choose a version of Vue.js that you want to start the project with (Use arrow keys)</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#  &gt; 3.x</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#    2.x</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 启动</span></span></span><br><span class="line">cd vue_test</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><hr><h2 id="2-2-【基于-vite-创建】-推荐"><a href="#2-2-【基于-vite-创建】-推荐" class="headerlink" title="2.2. 【基于 vite 创建】(推荐)"></a>2.2. 【基于 vite 创建】(推荐)</h2><p><code>vite</code> 是新一代前端构建工具，官网地址：<a href="https://vitejs.cn/">https://vitejs.cn</a>，<code>vite</code>的优势如下：</p><ul><li>轻量快速的热重载（<code>HMR</code>），能实现极速的服务启动。</li><li>对 <code>TypeScript</code>、<code>JSX</code>、<code>CSS</code> 等支持开箱即用。</li><li>真正的按需编译，不再等待整个应用编译完成。</li><li><code>webpack</code>构建 与 <code>vite</code>构建对比图如下：</li></ul><p><img src="https://s2.loli.net/2024/02/22/Zjp9rwdhWu1zaHK.png" alt="webpack构建" title="webpack构建" style="zoom:20%;box-shadow:0 0 10px black" /><img src="https://s2.loli.net/2024/02/22/UmeJz1Hgxk7rOyN.png" alt="vite构建" title="vite构建" style="zoom: 20%;box-shadow:0 0 10px black" /></p><ul><li>具体操作如下（点击查看<a href="https://cn.vuejs.org/guide/quick-start.html#creating-a-vue-application">官方文档</a>）</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 1.创建命令</span></span></span><br><span class="line">npm create vue@latest</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 2.具体配置</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置项目名称</span></span></span><br><span class="line">√ Project name: vue3_test</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加TypeScript支持</span></span></span><br><span class="line">√ Add TypeScript?  Yes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加JSX支持</span></span></span><br><span class="line">√ Add JSX Support?  No</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加路由环境</span></span></span><br><span class="line">√ Add Vue Router for Single Page Application development?  No</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加pinia环境</span></span></span><br><span class="line">√ Add Pinia for state management?  No</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加单元测试</span></span></span><br><span class="line">√ Add Vitest for Unit Testing?  No</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加端到端测试方案</span></span></span><br><span class="line">√ Add an End-to-End Testing Solution? » No</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加ESLint语法检查</span></span></span><br><span class="line">√ Add ESLint for code quality?  Yes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 是否添加Prettiert代码格式化</span></span></span><br><span class="line">√ Add Prettier for code formatting?  No</span><br></pre></td></tr></table></figure><p>自己动手编写一个App组件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;App&#x27;</span> <span class="comment">//组件名</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.app</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安装官方推荐的<code>vscode</code>插件：</p><img src="https://s2.loli.net/2024/02/22/R1E6rZBwxaFkghs.png" alt="Snipaste_2023-10-08_20-46-34" style="zoom:50%;" /> <img src="https://s2.loli.net/2024/02/22/tprjsKJVG97YvhI.png" alt="image-20231218085906380" style="zoom:42%;" /> <p>总结：</p><ul><li><code>Vite</code> 项目中，<code>index.html</code> 是项目的入口文件，在项目最外层。</li><li>加载<code>index.html</code>后，<code>Vite</code> 解析 <code>&lt;script type=&quot;module&quot; src=&quot;xxx&quot;&gt;</code> 指向的<code>JavaScript</code>。</li><li><code>Vue3</code>**中是通过 **<code>createApp</code> 函数创建一个应用实例。</li></ul><h2 id="2-3-【一个简单的效果】"><a href="#2-3-【一个简单的效果】" class="headerlink" title="2.3. 【一个简单的效果】"></a>2.3. 【一个简单的效果】</h2><p><code>Vue3</code>向下兼容<code>Vue2</code>语法，且<code>Vue3</code>中的模板中可以没有根标签</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>年龄+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showTel&quot;</span>&gt;</span>点我查看联系方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">tel</span>:<span class="string">&#x27;13888888888&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;zhang-san&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">age</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showTel</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">tel</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-Vue3核心语法"><a href="#3-Vue3核心语法" class="headerlink" title="3. Vue3核心语法"></a>3. Vue3核心语法</h1><h2 id="3-1-【OptionsAPI-与-CompositionAPI】"><a href="#3-1-【OptionsAPI-与-CompositionAPI】" class="headerlink" title="3.1.  【OptionsAPI 与 CompositionAPI】"></a>3.1.  【OptionsAPI 与 CompositionAPI】</h2><ul><li><code>Vue2</code>的<code>API</code>设计是<code>Options</code>（配置）风格的。</li><li><code>Vue3</code>的<code>API</code>设计是<code>Composition</code>（组合）风格的。</li></ul><h3 id="Options-API-的弊端"><a href="#Options-API-的弊端" class="headerlink" title="Options API 的弊端"></a>Options API 的弊端</h3><p><code>Options</code>类型的 <code>API</code>，数据、方法、计算属性等，是分散在：<code>data</code>、<code>methods</code>、<code>computed</code>中的，若想新增或者修改一个需求，就需要分别修改：<code>data</code>、<code>methods</code>、<code>computed</code>，不便于维护和复用。</p><p><img src="https://s2.loli.net/2024/02/22/kvMuHFr4tSRKGmB.gif" alt="1.gif" style="zoom:70%;border-radius:20px" /><img src="https://s2.loli.net/2024/02/22/lbNcvXTUHEzKe96.gif" alt="2.gif" style="zoom:70%;border-radius:20px" /></p><h3 id="Composition-API-的优势"><a href="#Composition-API-的优势" class="headerlink" title="Composition API 的优势"></a>Composition API 的优势</h3><p>可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。</p><p><img src="https://s2.loli.net/2024/02/22/LVDAY2KZjREvb9F.gif" alt="3.gif" style="height:300px;border-radius:10px"  /><img src="https://s2.loli.net/2024/02/22/hG9SmEjf8d2esDc.gif" alt="4.gif" style="height:300px;border-radius:10px"  /></p><blockquote><p>说明：以上四张动图原创作者：大帅老猿</p></blockquote><h2 id="3-2-【拉开序幕的-setup】"><a href="#3-2-【拉开序幕的-setup】" class="headerlink" title="3.2. 【拉开序幕的 setup】"></a>3.2. 【拉开序幕的 setup】</h2><h3 id="setup-概述"><a href="#setup-概述" class="headerlink" title="setup 概述"></a>setup 概述</h3><p><code>setup</code>是<code>Vue3</code>中一个新的配置项，值是一个函数，它是 <code>Composition API</code> <strong>“表演的舞台</strong><em><strong>”</strong></em>，组件中所用到的：数据、方法、计算属性、监视……等等，均配置在<code>setup</code>中。</p><p>特点如下：</p><ul><li><code>setup</code>函数返回的对象中的内容，可直接在模板中使用。</li><li><code>setup</code>中访问<code>this</code>是<code>undefined</code>。</li><li><code>setup</code>函数会在<code>beforeCreate</code>之前调用，它是“领先”所有钩子执行的。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>年龄+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showTel&quot;</span>&gt;</span>点我查看联系方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;Person&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 数据，原来写在data中（注意：此时的name、age、tel数据都不是响应式数据）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> name = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> age = <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> tel = <span class="string">&#x27;13888888888&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 方法，原来写在methods中</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        name = <span class="string">&#x27;zhang-san&#x27;</span> <span class="comment">//注意：此时这么修改name页面是不变化的</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(name)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        age += <span class="number">1</span> <span class="comment">//注意：此时这么修改age页面是不变化的</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(age)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">showTel</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(tel)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 返回一个对象，对象中的内容，模板中可以直接使用</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;name,age,tel,changeName,changeAge,showTel&#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="setup-的返回值"><a href="#setup-的返回值" class="headerlink" title="setup 的返回值"></a>setup 的返回值</h3><ul><li>若返回一个<strong>对象</strong>：则对象中的：属性、方法等，在模板中均可以直接使用**（重点关注）。**</li><li>若返回一个<strong>函数</strong>：则可以自定义渲染内容，代码如下：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">setup()&#123;</span><br><span class="line">  return ()=&gt; &#x27;你好啊！&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="setup-与-Options-API-的关系"><a href="#setup-与-Options-API-的关系" class="headerlink" title="setup 与 Options API 的关系"></a>setup 与 Options API 的关系</h3><ul><li><code>Vue2</code> 的配置（<code>data</code>、<code>methos</code>……）中<strong>可以访问到</strong> <code>setup</code>中的属性、方法。</li><li>但在<code>setup</code>中<strong>不能访问到</strong><code>Vue2</code>的配置（<code>data</code>、<code>methos</code>……）。</li><li>如果与<code>Vue2</code>冲突，则<code>setup</code>优先。</li></ul><h3 id="setup-语法糖"><a href="#setup-语法糖" class="headerlink" title="setup 语法糖"></a>setup 语法糖</h3><p><code>setup</code>函数有一个语法糖，这个语法糖，可以让我们把<code>setup</code>独立出去，代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changAge&quot;</span>&gt;</span>年龄+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showTel&quot;</span>&gt;</span>点我查看联系方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;Person&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 下面的写法是setup语法糖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">//undefined</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据（注意：此时的name、age、tel都不是响应式数据）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> name = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> age = <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> tel = <span class="string">&#x27;13888888888&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    name = <span class="string">&#x27;李四&#x27;</span><span class="comment">//注意：此时这么修改name页面是不变化的</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age)</span></span><br><span class="line"><span class="language-javascript">    age += <span class="number">1</span> <span class="comment">//注意：此时这么修改age页面是不变化的</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">showTel</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(tel)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>扩展：上述代码，还需要编写一个不写<code>setup</code>的<code>script</code>标签，去指定组件名字，比较麻烦，我们可以借助<code>vite</code>中的插件简化</p><ol><li>第一步：<code>npm i vite-plugin-vue-setup-extend -D</code></li><li>第二步：<code>vite.config.ts</code></li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#123; defineConfig &#125; from &#x27;vite&#x27;</span><br><span class="line">import VueSetupExtend from &#x27;vite-plugin-vue-setup-extend&#x27;</span><br><span class="line"></span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  plugins: [ VueSetupExtend() ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>第三步：<code>&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</code></li></ol><h2 id="3-3-【ref-创建：基本类型的响应式数据】"><a href="#3-3-【ref-创建：基本类型的响应式数据】" class="headerlink" title="3.3. 【ref 创建：基本类型的响应式数据】"></a>3.3. 【ref 创建：基本类型的响应式数据】</h2><ul><li>**作用：**定义响应式变量。</li><li><strong>语法：</strong><code>let xxx = ref(初始值)</code>。</li><li>**返回值：**一个<code>RefImpl</code>的实例对象，简称<code>ref对象</code>或<code>ref</code>，<code>ref</code>对象的<code>value</code><strong>属性是响应式的</strong>。</li><li><strong>注意点：</strong><ul><li><code>JS</code>中操作数据需要：<code>xxx.value</code>，但模板中不需要<code>.value</code>，直接使用即可。</li><li>对于<code>let name = ref(&#39;张三&#39;)</code>来说，<code>name</code>不是响应式的，<code>name.value</code>是响应式的。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>年龄+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showTel&quot;</span>&gt;</span>点我查看联系方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> name = <span class="title function_">ref</span>(<span class="string">&#x27;张三&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> age = <span class="title function_">ref</span>(<span class="number">18</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// tel就是一个普通的字符串，不是响应式的</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> tel = <span class="string">&#x27;13888888888&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// JS中操作ref对象时候需要.value</span></span></span><br><span class="line"><span class="language-javascript">    name.<span class="property">value</span> = <span class="string">&#x27;李四&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// name = ref(&#x27;zhang-san&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// JS中操作ref对象时候需要.value</span></span></span><br><span class="line"><span class="language-javascript">    age.<span class="property">value</span> += <span class="number">1</span> </span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">showTel</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(tel)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-4-【reactive-创建：对象类型的响应式数据】"><a href="#3-4-【reactive-创建：对象类型的响应式数据】" class="headerlink" title="3.4. 【reactive 创建：对象类型的响应式数据】"></a>3.4. 【reactive 创建：对象类型的响应式数据】</h2><ul><li><strong>作用：<strong>定义一个</strong>响应式对象</strong>（基本类型不要用它，要用<code>ref</code>，否则报错）</li><li><strong>语法：</strong><code>let 响应式对象= reactive(源对象)</code>。</li><li>**返回值：**一个<code>Proxy</code>的实例对象，简称：响应式对象。</li><li><strong>注意点：</strong><code>reactive</code>定义的响应式数据是“深层次”的。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>游戏列表：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;g in games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g.id&quot;</span>&gt;</span>&#123;&#123; g.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试：&#123;&#123;obj.a.b.c.d&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeCarPrice&quot;</span>&gt;</span>修改汽车价格<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFirstGame&quot;</span>&gt;</span>修改第一游戏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> car = <span class="title function_">reactive</span>(&#123; <span class="attr">brand</span>: <span class="string">&#x27;奔驰&#x27;</span>, <span class="attr">price</span>: <span class="number">100</span> &#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> games = <span class="title function_">reactive</span>([</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">id</span>: <span class="string">&#x27;ahsgdyfa01&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;英雄联盟&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">id</span>: <span class="string">&#x27;ahsgdyfa02&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;王者荣耀&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">id</span>: <span class="string">&#x27;ahsgdyfa03&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;原神&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> obj = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">a</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">b</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">c</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">d</span>:<span class="number">666</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeCarPrice</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  car.<span class="property">price</span> += <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeFirstGame</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  games[<span class="number">0</span>].<span class="property">name</span> = <span class="string">&#x27;流星蝴蝶剑&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">  obj.<span class="property">a</span>.<span class="property">b</span>.<span class="property">c</span>.<span class="property">d</span> = <span class="number">999</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-5-【ref-创建：对象类型的响应式数据】"><a href="#3-5-【ref-创建：对象类型的响应式数据】" class="headerlink" title="3.5. 【ref 创建：对象类型的响应式数据】"></a>3.5. 【ref 创建：对象类型的响应式数据】</h2><ul><li>其实<code>ref</code>接收的数据可以是：<strong>基本类型</strong>、<strong>对象类型</strong>。</li><li>若<code>ref</code>接收的是对象类型，内部其实也是调用了<code>reactive</code>函数。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>游戏列表：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;g in games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g.id&quot;</span>&gt;</span>&#123;&#123; g.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试：&#123;&#123;obj.a.b.c.d&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeCarPrice&quot;</span>&gt;</span>修改汽车价格<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFirstGame&quot;</span>&gt;</span>修改第一游戏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> car = <span class="title function_">ref</span>(&#123; <span class="attr">brand</span>: <span class="string">&#x27;奔驰&#x27;</span>, <span class="attr">price</span>: <span class="number">100</span> &#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> games = <span class="title function_">ref</span>([</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">id</span>: <span class="string">&#x27;ahsgdyfa01&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;英雄联盟&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">id</span>: <span class="string">&#x27;ahsgdyfa02&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;王者荣耀&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">id</span>: <span class="string">&#x27;ahsgdyfa03&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;原神&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> obj = <span class="title function_">ref</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">a</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">b</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">c</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">d</span>:<span class="number">666</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(car)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeCarPrice</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  car.<span class="property">value</span>.<span class="property">price</span> += <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeFirstGame</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  games.<span class="property">value</span>[<span class="number">0</span>].<span class="property">name</span> = <span class="string">&#x27;流星蝴蝶剑&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">  obj.<span class="property">value</span>.<span class="property">a</span>.<span class="property">b</span>.<span class="property">c</span>.<span class="property">d</span> = <span class="number">999</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-6-【ref-对比-reactive】"><a href="#3-6-【ref-对比-reactive】" class="headerlink" title="3.6. 【ref 对比 reactive】"></a>3.6. 【ref 对比 reactive】</h2><p>宏观角度看：</p><blockquote><ol><li><p><code>ref</code>用来定义：<strong>基本类型数据</strong>、<strong>对象类型数据</strong>；</p></li><li><p><code>reactive</code>用来定义：<strong>对象类型数据</strong>。</p></li></ol></blockquote><ul><li>区别：</li></ul><blockquote><ol><li><p><code>ref</code>创建的变量必须使用<code>.value</code>（可以使用<code>volar</code>插件自动添加<code>.value</code>）。</p><img src="https://s2.loli.net/2024/02/22/OWeGVjZkt341D5h.png" alt="自动补充value" style="zoom:50%;border-radius:20px" /> </li><li><p><code>reactive</code>重新分配一个新对象，会<strong>失去</strong>响应式（可以使用<code>Object.assign</code>去整体替换）。</p></li></ol></blockquote><ul><li>使用原则：<blockquote><ol><li>若需要一个基本类型的响应式数据，必须使用<code>ref</code>。</li><li>若需要一个响应式对象，层级不深，<code>ref</code>、<code>reactive</code>都可以。</li><li>若需要一个响应式对象，且层级较深，推荐使用<code>reactive</code>。</li></ol></blockquote></li></ul><h2 id="3-7-【toRefs-与-toRef】"><a href="#3-7-【toRefs-与-toRef】" class="headerlink" title="3.7. 【toRefs 与 toRef】"></a>3.7. 【toRefs 与 toRef】</h2><ul><li>作用：将一个响应式对象中的每一个属性，转换为<code>ref</code>对象。</li><li>备注：<code>toRefs</code>与<code>toRef</code>功能一致，但<code>toRefs</code>可以批量转换。</li><li>语法如下：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123;person.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;person.age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>性别：&#123;&#123;person.gender&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>修改年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeGender&quot;</span>&gt;</span>修改性别<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref,reactive,toRefs,toRef&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>, <span class="attr">age</span>:<span class="number">18</span>, <span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span>&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 通过toRefs将person对象中的n个属性批量取出，且依然保持响应式的能力</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> &#123;name,gender&#125; =  <span class="title function_">toRefs</span>(person)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 通过toRef将person对象中的gender属性取出，且依然保持响应式的能力</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> age = <span class="title function_">toRef</span>(person,<span class="string">&#x27;age&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    name.<span class="property">value</span> += <span class="string">&#x27;~&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    age.<span class="property">value</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeGender</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    gender.<span class="property">value</span> = <span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-8-【computed】"><a href="#3-8-【computed】" class="headerlink" title="3.8. 【computed】"></a>3.8. 【computed】</h2><p>作用：根据已有数据计算出新数据（和<code>Vue2</code>中的<code>computed</code>作用一致）。</p><img src="https://s2.loli.net/2024/02/22/vnDHLu7oJBd96tj.gif" style="zoom:20%;" />  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFullName&quot;</span>&gt;</span>全名改为：li-si<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;App&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref,computed&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> firstName = <span class="title function_">ref</span>(<span class="string">&#x27;zhang&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> lastName = <span class="title function_">ref</span>(<span class="string">&#x27;san&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 计算属性——只读取，不修改</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* let fullName = computed(()=&gt;&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    return firstName.value + &#x27;-&#x27; + lastName.value</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">  &#125;) */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 计算属性——既读取又修改</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> fullName = <span class="title function_">computed</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 读取</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">get</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> firstName.<span class="property">value</span> + <span class="string">&#x27;-&#x27;</span> + lastName.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 修改</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">set</span>(<span class="params">val</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;有人修改了fullName&#x27;</span>,val)</span></span><br><span class="line"><span class="language-javascript">      firstName.<span class="property">value</span> = val.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">      lastName.<span class="property">value</span> = val.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeFullName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    fullName.<span class="property">value</span> = <span class="string">&#x27;li-si&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125; </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-9-【watch】"><a href="#3-9-【watch】" class="headerlink" title="3.9.【watch】"></a>3.9.【watch】</h2><ul><li>作用：监视数据的变化（和<code>Vue2</code>中的<code>watch</code>作用一致）</li><li>特点：<code>Vue3</code>中的<code>watch</code>只能监视以下<strong>四种数据</strong>：<blockquote><ol><li><code>ref</code>定义的数据。</li><li><code>reactive</code>定义的数据。</li><li>函数返回一个值（<code>getter</code>函数）。</li><li>一个包含上述内容的数组。</li></ol></blockquote></li></ul><p>我们在<code>Vue3</code>中使用<code>watch</code>的时候，通常会遇到以下几种情况：</p><h3 id="情况一"><a href="#情况一" class="headerlink" title="* 情况一"></a>* 情况一</h3><p>监视<code>ref</code>定义的【基本类型】数据：直接写数据名即可，监视的是其<code>value</code>值的改变。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>情况一：监视【ref】定义的【基本类型】数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前求和为：&#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeSum&quot;</span>&gt;</span>点我sum+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref,watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeSum</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    sum.<span class="property">value</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监视，情况一：监视【ref】定义的【基本类型】数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> stopWatch = <span class="title function_">watch</span>(sum,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sum变化了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(newValue &gt;= <span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">stopWatch</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="情况二"><a href="#情况二" class="headerlink" title="* 情况二"></a>* 情况二</h3><p>监视<code>ref</code>定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。</p><blockquote><p>注意：</p><ul><li><p>若修改的是<code>ref</code>定义的对象中的属性，<code>newValue</code> 和 <code>oldValue</code> 都是新值，因为它们是同一个对象。</p></li><li><p>若修改整个<code>ref</code>定义的对象，<code>newValue</code> 是新值， <code>oldValue</code> 是旧值，因为不是同一个对象了。</p></li></ul></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>情况二：监视【ref】定义的【对象类型】数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>修改年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changePerson&quot;</span>&gt;</span>修改整个人<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref,watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = <span class="title function_">ref</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">value</span>.<span class="property">name</span> += <span class="string">&#x27;~&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">value</span>.<span class="property">age</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changePerson</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">value</span> = &#123;<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">90</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    watch的第一个参数是：被监视的数据</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    watch的第二个参数是：监视的回调</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    watch的第三个参数是：配置对象（deep、immediate等等.....） </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">  */</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">watch</span>(person,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person变化了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">  &#125;,&#123;<span class="attr">deep</span>:<span class="literal">true</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="情况三"><a href="#情况三" class="headerlink" title="*  情况三"></a>*  情况三</h3><p>监视<code>reactive</code>定义的【对象类型】数据，且默认开启了深度监视。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>情况三：监视【reactive】定义的【对象类型】数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>修改年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changePerson&quot;</span>&gt;</span>修改整个人<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试：&#123;&#123;obj.a.b.c&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>修改obj.a.b.c<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;reactive,watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> obj = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">a</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">b</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">c</span>:<span class="number">666</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">name</span> += <span class="string">&#x27;~&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">age</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changePerson</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">assign</span>(person,&#123;<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">80</span>&#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    obj.<span class="property">a</span>.<span class="property">b</span>.<span class="property">c</span> = <span class="number">888</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">watch</span>(person,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person变化了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">watch</span>(obj,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Obj变化了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="情况四"><a href="#情况四" class="headerlink" title="* 情况四"></a>* 情况四</h3><p>监视<code>ref</code>或<code>reactive</code>定义的【对象类型】数据中的<strong>某个属性</strong>，注意点如下：</p><ol><li>若该属性值<strong>不是</strong>【对象类型】，需要写成函数形式。</li><li>若该属性值是<strong>依然</strong>是【对象类型】，可直接编，也可写成函数，建议写成函数。</li></ol><p>结论：监视的要是对象里的属性，那么最好写函数式，注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>修改年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeC1&quot;</span>&gt;</span>修改第一台车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeC2&quot;</span>&gt;</span>修改第二台车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeCar&quot;</span>&gt;</span>修改整个车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;reactive,watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">car</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">c1</span>:<span class="string">&#x27;奔驰&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">c2</span>:<span class="string">&#x27;宝马&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">name</span> += <span class="string">&#x27;~&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">age</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeC1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">car</span>.<span class="property">c1</span> = <span class="string">&#x27;奥迪&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeC2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">car</span>.<span class="property">c2</span> = <span class="string">&#x27;大众&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeCar</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">car</span> = &#123;<span class="attr">c1</span>:<span class="string">&#x27;雅迪&#x27;</span>,<span class="attr">c2</span>:<span class="string">&#x27;爱玛&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监视，情况四：监视响应式对象中的某个属性，且该属性是基本类型的，要写成函数式</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* watch(()=&gt; person.name,(newValue,oldValue)=&gt;&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    console.log(&#x27;person.name变化了&#x27;,newValue,oldValue)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">  &#125;) */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监视，情况四：监视响应式对象中的某个属性，且该属性是对象类型的，可以直接写，也能写函数，更推荐写函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">watch</span>(<span class="function">()=&gt;</span>person.<span class="property">car</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person.car变化了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">  &#125;,&#123;<span class="attr">deep</span>:<span class="literal">true</span>&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="情况五"><a href="#情况五" class="headerlink" title="* 情况五"></a>* 情况五</h3><p>监视上述的多个数据</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>情况五：监视上述的多个数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名：&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeAge&quot;</span>&gt;</span>修改年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeC1&quot;</span>&gt;</span>修改第一台车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeC2&quot;</span>&gt;</span>修改第二台车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeCar&quot;</span>&gt;</span>修改整个车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;reactive,watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">car</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">c1</span>:<span class="string">&#x27;奔驰&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">c2</span>:<span class="string">&#x27;宝马&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">name</span> += <span class="string">&#x27;~&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">age</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeC1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">car</span>.<span class="property">c1</span> = <span class="string">&#x27;奥迪&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeC2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">car</span>.<span class="property">c2</span> = <span class="string">&#x27;大众&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeCar</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    person.<span class="property">car</span> = &#123;<span class="attr">c1</span>:<span class="string">&#x27;雅迪&#x27;</span>,<span class="attr">c2</span>:<span class="string">&#x27;爱玛&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监视，情况五：监视上述的多个数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">watch</span>([<span class="function">()=&gt;</span>person.<span class="property">name</span>,person.<span class="property">car</span>],<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person.car变化了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">  &#125;,&#123;<span class="attr">deep</span>:<span class="literal">true</span>&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-10-【watchEffect】"><a href="#3-10-【watchEffect】" class="headerlink" title="3.10. 【watchEffect】"></a>3.10. 【watchEffect】</h2><ul><li><p>官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。</p></li><li><p><code>watch</code>对比<code>watchEffect</code></p><blockquote><ol><li><p>都能监听响应式数据的变化，不同的是监听数据变化的方式不同</p></li><li><p><code>watch</code>：要明确指出监视的数据</p></li><li><p><code>watchEffect</code>：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。</p></li></ol></blockquote></li><li><p>示例代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>需求：水温达到50℃，或水位达到20cm，则联系服务器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>水温：&#123;&#123;temp&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>水位：&#123;&#123;height&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changePrice&quot;</span>&gt;</span>水温+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeSum&quot;</span>&gt;</span>水位+10<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref,watch,watchEffect&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> temp = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> height = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changePrice</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    temp.<span class="property">value</span> += <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeSum</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    height.<span class="property">value</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 用watch实现，需要明确的指出要监视：temp、height</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">watch</span>([temp,height],<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 从value中获取最新的temp值、height值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> [newTemp,newHeight] = value</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 室温达到50℃，或水位达到20cm，立刻联系服务器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(newTemp &gt;= <span class="number">50</span> || newHeight &gt;= <span class="number">20</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;联系服务器&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 用watchEffect实现，不用</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> stopWtach = <span class="title function_">watchEffect</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 室温达到50℃，或水位达到20cm，立刻联系服务器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(temp.<span class="property">value</span> &gt;= <span class="number">50</span> || height.<span class="property">value</span> &gt;= <span class="number">20</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;demo&#x27;</span>)?.<span class="property">innerText</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;联系服务器&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 水温达到100，或水位达到50，取消监视</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(temp.<span class="property">value</span> === <span class="number">100</span> || height.<span class="property">value</span> === <span class="number">50</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;清理了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">stopWtach</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3-11-【标签的-ref-属性】"><a href="#3-11-【标签的-ref-属性】" class="headerlink" title="3.11. 【标签的 ref 属性】"></a>3.11. 【标签的 ref 属性】</h2><p>作用：用于注册模板引用。</p><blockquote><ul><li><p>用在普通<code>DOM</code>标签上，获取的是<code>DOM</code>节点。</p></li><li><p>用在组件标签上，获取的是组件实例对象。</p></li></ul></blockquote><p>用在普通<code>DOM</code>标签上：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">ref</span>=<span class="string">&quot;title1&quot;</span>&gt;</span>尚硅谷<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">ref</span>=<span class="string">&quot;title2&quot;</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">ref</span>=<span class="string">&quot;title3&quot;</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inpt&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showLog&quot;</span>&gt;</span>点我打印内容<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> title1 = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> title2 = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> title3 = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">showLog</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 通过id获取元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> t1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;title1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 打印内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>((t1 <span class="keyword">as</span> <span class="title class_">HTMLElement</span>).<span class="property">innerText</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>((&lt;<span class="title class_">HTMLElement</span>&gt;t1).<span class="property">innerText</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(t1?.<span class="property">innerText</span>)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"><span class="comment">/************************************/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 通过ref获取元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(title1.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(title2.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(title3.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用在组件标签上：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 父组件App.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">ref</span>=<span class="string">&quot;ren&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;App&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">Person</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Person.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> ren = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ren.<span class="property">value</span>.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ren.<span class="property">value</span>.<span class="property">age</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 子组件Person.vue中要使用defineExpose暴露内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;ref,defineExpose&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> name = <span class="title function_">ref</span>(<span class="string">&#x27;张三&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> age = <span class="title function_">ref</span>(<span class="number">18</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/****************************/</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/****************************/</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 使用defineExpose将组件中的数据交给外部</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">defineExpose</span>(&#123;name,age&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-12-【props】"><a href="#3-12-【props】" class="headerlink" title="3.12. 【props】"></a>3.12. 【props】</h2><blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个接口，限制每个Person对象的格式</span></span><br><span class="line"><span class="keyword">export</span> interface <span class="title class_">PersonInter</span> &#123;</span><br><span class="line"><span class="attr">id</span>:string,</span><br><span class="line"><span class="attr">name</span>:string,</span><br><span class="line"> <span class="attr">age</span>:number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个自定义类型Persons</span></span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">Persons</span> = <span class="title class_">Array</span>&lt;<span class="title class_">PersonInter</span>&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code>中代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span> <span class="attr">:list</span>=<span class="string">&quot;persons&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;App&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Person</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Person.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">import</span> &#123;type <span class="title class_">Persons</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;./types&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">let</span> persons = reactive&lt;<span class="title class_">Persons</span>&gt;([</span></span><br><span class="line"><span class="language-javascript">  &#123;<span class="attr">id</span>:<span class="string">&#x27;e98219e12&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">   &#123;<span class="attr">id</span>:<span class="string">&#x27;e98219e13&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;<span class="attr">id</span>:<span class="string">&#x27;e98219e14&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  ])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>Person.vue</code>中代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">     &#123;&#123;item.name&#125;&#125;--&#123;&#123;item.age&#125;&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;defineProps&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;type <span class="title class_">PersonInter</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/types&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 第一种写法：仅接收</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// const props = defineProps([&#x27;list&#x27;])</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 第二种写法：接收+限制类型</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// defineProps&lt;&#123;list:Persons&#125;&gt;()</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 第三种写法：接收+限制类型+指定默认值+限制必要性</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> props = <span class="title function_">withDefaults</span>(defineProps&lt;&#123;list?:<span class="title class_">Persons</span>&#125;&gt;(),&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">list</span>:<span class="function">()=&gt;</span>[&#123;<span class="attr">id</span>:<span class="string">&#x27;asdasg01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;小猪佩奇&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;]</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(props)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="3-13-【生命周期】"><a href="#3-13-【生命周期】" class="headerlink" title="3.13. 【生命周期】"></a>3.13. 【生命周期】</h2><ul><li><p>概念：<code>Vue</code>组件实例在创建时要经历一系列的初始化步骤，在此过程中<code>Vue</code>会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子</p></li><li><p>规律：</p><blockquote><p>生命周期整体分为四个阶段，分别是：<strong>创建、挂载、更新、销毁</strong>，每个阶段都有两个钩子，一前一后。</p></blockquote></li><li><p><code>Vue2</code>的生命周期</p><blockquote><p>创建阶段：<code>beforeCreate</code>、<code>created</code></p><p>挂载阶段：<code>beforeMount</code>、<code>mounted</code></p><p>更新阶段：<code>beforeUpdate</code>、<code>updated</code></p><p>销毁阶段：<code>beforeDestroy</code>、<code>destroyed</code></p></blockquote></li><li><p><code>Vue3</code>的生命周期</p><blockquote><p>创建阶段：<code>setup</code></p><p>挂载阶段：<code>onBeforeMount</code>、<code>onMounted</code></p><p>更新阶段：<code>onBeforeUpdate</code>、<code>onUpdated</code></p><p>卸载阶段：<code>onBeforeUnmount</code>、<code>onUnmounted</code></p></blockquote></li><li><p>常用的钩子：<code>onMounted</code>(挂载完毕)、<code>onUpdated</code>(更新完毕)、<code>onBeforeUnmount</code>(卸载之前)</p></li><li><p>示例代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前求和为：&#123;&#123; sum &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeSum&quot;</span>&gt;</span>点我sum+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- vue3写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;Person&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; </span></span><br><span class="line"><span class="language-javascript">    ref, </span></span><br><span class="line"><span class="language-javascript">    onBeforeMount, </span></span><br><span class="line"><span class="language-javascript">    onMounted, </span></span><br><span class="line"><span class="language-javascript">    onBeforeUpdate, </span></span><br><span class="line"><span class="language-javascript">    onUpdated, </span></span><br><span class="line"><span class="language-javascript">    onBeforeUnmount, </span></span><br><span class="line"><span class="language-javascript">    onUnmounted </span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">changeSum</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    sum.<span class="property">value</span> += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;setup&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 生命周期钩子</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onBeforeMount</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;挂载之前&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;挂载完毕&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onBeforeUpdate</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新之前&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onUpdated</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新完毕&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onBeforeUnmount</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;卸载之前&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;卸载完毕&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3-14-【自定义hook】"><a href="#3-14-【自定义hook】" class="headerlink" title="3.14. 【自定义hook】"></a>3.14. 【自定义hook】</h2><ul><li><p>什么是<code>hook</code>？—— 本质是一个函数，把<code>setup</code>函数中使用的<code>Composition API</code>进行了封装，类似于<code>vue2.x</code>中的<code>mixin</code>。</p></li><li><p>自定义<code>hook</code>的优势：复用代码, 让<code>setup</code>中的逻辑更清楚易懂。</p></li></ul><p>示例代码：</p><ul><li><p><code>useSum.ts</code>中内容如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import &#123;ref,onMounted&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">export default function()&#123;</span><br><span class="line">  let sum = ref(0)</span><br><span class="line"></span><br><span class="line">  const increment = ()=&gt;&#123;</span><br><span class="line">    sum.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  const decrement = ()=&gt;&#123;</span><br><span class="line">    sum.value -= 1</span><br><span class="line">  &#125;</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    increment()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  //向外部暴露数据</span><br><span class="line">  return &#123;sum,increment,decrement&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>useDog.ts</code>中内容如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;reactive,onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios,&#123;<span class="title class_">AxiosError</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> dogList = reactive&lt;string[]&gt;([])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方法</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getDog</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 发请求</span></span><br><span class="line">      <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;https://dog.ceo/api/breed/pembroke/images/random&#x27;</span>)</span><br><span class="line">      <span class="comment">// 维护数据</span></span><br><span class="line">      dogList.<span class="title function_">push</span>(data.<span class="property">message</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="comment">// 处理错误</span></span><br><span class="line">      <span class="keyword">const</span> err = &lt;<span class="title class_">AxiosError</span>&gt;error</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 挂载钩子</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">getDog</span>()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//向外部暴露数据</span></span><br><span class="line">  <span class="keyword">return</span> &#123;dogList,getDog&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组件中具体使用：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前求和为：&#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>点我+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decrement&quot;</span>&gt;</span>点我-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-for</span>=<span class="string">&quot;(u,index) in dogList.urlList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;(u as string)&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;dogList.isLoading&quot;</span>&gt;</span>加载中......<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getDog&quot;</span>&gt;</span>再来一只狗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;defineComponent&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> useSum <span class="keyword">from</span> <span class="string">&#x27;./hooks/useSum&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> useDog <span class="keyword">from</span> <span class="string">&#x27;./hooks/useDog&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> &#123;sum,increment,decrement&#125; = <span class="title function_">useSum</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> &#123;dogList,getDog&#125; = <span class="title function_">useDog</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="4-路由"><a href="#4-路由" class="headerlink" title="4. 路由"></a>4. 路由</h1><h2 id="4-1-【对路由的理解】"><a href="#4-1-【对路由的理解】" class="headerlink" title="4.1. 【对路由的理解】"></a>4.1. 【对路由的理解】</h2><img src="https://s2.loli.net/2024/02/22/DwoFp1lznKBvS5R.png" alt="image-20231018144351536" style="zoom:20%;border-radius:40px" /> <h2 id="4-2-【基本切换效果】"><a href="#4-2-【基本切换效果】" class="headerlink" title="4.2. 【基本切换效果】"></a>4.2. 【基本切换效果】</h2><ul><li><p><code>Vue3</code>中要使用<code>vue-router</code>的最新版本，目前是<code>4</code>版本。</p></li><li><p>路由配置文件代码如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRouter,createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">News</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/News.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/About.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>main.ts</code>代码如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>App.vue</code>代码如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>Vue路由测试<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 导航区 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navigate&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">to</span>=<span class="string">&quot;/news&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">to</span>=<span class="string">&quot;/about&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 展示区 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main-content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterView</span>&gt;</span><span class="tag">&lt;/<span class="name">RouterView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span> <span class="attr">name</span>=<span class="string">&quot;App&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;<span class="title class_">RouterLink</span>,<span class="title class_">RouterView</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4-3-【两个注意点】"><a href="#4-3-【两个注意点】" class="headerlink" title="4.3. 【两个注意点】"></a>4.3. 【两个注意点】</h2><blockquote><ol><li><p>路由组件通常存放在<code>pages</code> 或 <code>views</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</p></li><li><p>通过点击导航，视觉效果上“消失” 了的路由组件，默认是被<strong>卸载</strong>掉的，需要的时候再去<strong>挂载</strong>。</p></li></ol></blockquote><h2 id="4-4-【路由器工作模式】"><a href="#4-4-【路由器工作模式】" class="headerlink" title="4.4.【路由器工作模式】"></a>4.4.【路由器工作模式】</h2><ol><li><p><code>history</code>模式</p><blockquote><p>优点：<code>URL</code>更加美观，不带有<code>#</code>，更接近传统的网站<code>URL</code>。</p><p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有<code>404</code>错误。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHistory</span>(), <span class="comment">//history模式</span></span><br><span class="line"><span class="comment">/******/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></blockquote></li><li><p><code>hash</code>模式</p><blockquote><p>优点：兼容性更好，因为不需要服务器端处理路径。</p><p>缺点：<code>URL</code>带有<code>#</code>不太美观，且在<code>SEO</code>优化方面相对较差。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHashHistory</span>(), <span class="comment">//hash模式</span></span><br><span class="line"><span class="comment">/******/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></blockquote></li></ol><h2 id="4-5-【to的两种写法】"><a href="#4-5-【to的两种写法】" class="headerlink" title="4.5. 【to的两种写法】"></a>4.5. 【to的两种写法】</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 第一种：to的字符串写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 第二种：to的对象写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;path:&#x27;/home&#x27;&#125;&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-6-【命名路由】"><a href="#4-6-【命名路由】" class="headerlink" title="4.6. 【命名路由】"></a>4.6. 【命名路由】</h2><p>作用：可以简化路由跳转及传参（后面就讲）。</p><p>给路由规则命名：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>跳转路由：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--简化前：需要写完整的路径（to的字符串写法） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/news/detail&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--简化后：直接通过名字跳转（to的对象写法配合name属性） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name:&#x27;guanyu&#x27;&#125;&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-7-【嵌套路由】"><a href="#4-7-【嵌套路由】" class="headerlink" title="4.7. 【嵌套路由】"></a>4.7. 【嵌套路由】</h2><ol><li><p>编写<code>News</code>的子路由：<code>Detail.vue</code></p></li><li><p>配置路由规则，使用<code>children</code>配置项：</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li><li><p>跳转路由（记得要加完整路径）：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/news/detail&quot;</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 或 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>记得去<code>Home</code>组件中预留一个<code>&lt;router-view&gt;</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;news-list&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">v-for</span>=<span class="string">&quot;news in newsList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;news.id&quot;</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;news.name&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news-detail&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterView</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="4-8-【路由传参】"><a href="#4-8-【路由传参】" class="headerlink" title="4.8. 【路由传参】"></a>4.8. 【路由传参】</h2><h3 id="query参数"><a href="#query参数" class="headerlink" title="query参数"></a>query参数</h3><ol><li><p>传递参数</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 跳转并携带query参数（to的字符串写法） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/news/detail?a=1&amp;b=2&amp;content=欢迎你&quot;</span>&gt;</span></span><br><span class="line">跳转</span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 跳转并携带query参数（to的对象写法） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RouterLink</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">    //name:&#x27;xiang&#x27;, //用name也可以跳转</span></span></span><br><span class="line"><span class="string"><span class="tag">    path:&#x27;/news/detail&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="tag">    query:&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">      id:news.id,</span></span></span><br><span class="line"><span class="string"><span class="tag">      title:news.title,</span></span></span><br><span class="line"><span class="string"><span class="tag">      content:news.content</span></span></span><br><span class="line"><span class="string"><span class="tag">    &#125;</span></span></span><br><span class="line"><span class="string"><span class="tag">  &#125;&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  &#123;&#123;news.title&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="comment">// 打印query参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="params参数"><a href="#params参数" class="headerlink" title="params参数"></a>params参数</h3><ol><li><p>传递参数</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 跳转并携带params参数（to的字符串写法） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">:to</span>=<span class="string">&quot;`/news/detail/001/新闻001/内容001`&quot;</span>&gt;</span>&#123;&#123;news.title&#125;&#125;<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 跳转并携带params参数（to的对象写法） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RouterLink</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">    name:&#x27;xiang&#x27;, //用name跳转</span></span></span><br><span class="line"><span class="string"><span class="tag">    params:&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">      id:news.id,</span></span></span><br><span class="line"><span class="string"><span class="tag">      title:news.title,</span></span></span><br><span class="line"><span class="string"><span class="tag">      content:news.title</span></span></span><br><span class="line"><span class="string"><span class="tag">    &#125;</span></span></span><br><span class="line"><span class="string"><span class="tag">  &#125;&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  &#123;&#123;news.title&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="comment">// 打印params参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">params</span>)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>备注1：传递<code>params</code>参数时，若使用<code>to</code>的对象写法，必须使用<code>name</code>配置项，不能用<code>path</code>。</p><p>备注2：传递<code>params</code>参数时，需要提前在规则中占位。</p></blockquote><h2 id="4-9-【路由的props配置】"><a href="#4-9-【路由的props配置】" class="headerlink" title="4.9. 【路由的props配置】"></a>4.9. 【路由的props配置】</h2><p>作用：让路由组件更方便的收到参数（可以将路由参数作为<code>props</code>传给组件）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail/:id/:title/:content&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// props的对象写法，作用：把对象中的每一组key-value作为props传给Detail组件</span></span><br><span class="line">  <span class="comment">// props:&#123;a:1,b:2,c:3&#125;, </span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// props的布尔值写法，作用：把收到了每一组params参数，作为props传给Detail组件</span></span><br><span class="line">  <span class="comment">// props:true</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// props的函数写法，作用：把返回的对象中每一组key-value作为props传给Detail组件</span></span><br><span class="line">  <span class="title function_">props</span>(<span class="params">route</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> route.<span class="property">query</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-10-【-replace属性】"><a href="#4-10-【-replace属性】" class="headerlink" title="4.10. 【 replace属性】"></a>4.10. 【 replace属性】</h2><ol><li><p>作用：控制路由跳转时操作浏览器历史记录的模式。</p></li><li><p>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>：</p><ul><li><code>push</code>是追加历史记录（默认值）。</li><li><code>replace</code>是替换当前记录。</li></ul></li><li><p>开启<code>replace</code>模式：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">replace</span> <span class="attr">.......</span>&gt;</span>News<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="4-11-【编程式导航】"><a href="#4-11-【编程式导航】" class="headerlink" title="4.11. 【编程式导航】"></a>4.11. 【编程式导航】</h2><p>路由组件的两个重要的属性：<code>$route</code>和<code>$router</code>变成了两个<code>hooks</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute,useRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">parmas</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">push</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">replace</span>)</span><br></pre></td></tr></table></figure><h2 id="4-12-【重定向】"><a href="#4-12-【重定向】" class="headerlink" title="4.12. 【重定向】"></a>4.12. 【重定向】</h2><ol><li><p>作用：将特定的路径，重新定向到已有路由。</p></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">redirect</span>:<span class="string">&#x27;/about&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="5-pinia"><a href="#5-pinia" class="headerlink" title="5. pinia"></a>5. pinia</h1><h2 id="5-1【准备一个效果】"><a href="#5-1【准备一个效果】" class="headerlink" title="5.1【准备一个效果】"></a>5.1【准备一个效果】</h2><img src="https://s2.loli.net/2024/02/22/GbKyu4poHJZtgw2.gif" alt="pinia_example" style="zoom:30%;border:3px solid" /> <h2 id="5-2【搭建-pinia-环境】"><a href="#5-2【搭建-pinia-环境】" class="headerlink" title="5.2【搭建 pinia 环境】"></a>5.2【搭建 pinia 环境】</h2><p>第一步：<code>npm install pinia</code></p><p>第二步：操作<code>src/main.ts</code></p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 引入createPinia，用于创建pinia */</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建pinia */</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用插件 */</span>&#123;&#125;</span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>此时开发者工具中已经有了<code>pinia</code>选项</p><img src="https://s2.loli.net/2024/02/22/avODA9IErUTojih.png" style="zoom:80%;border:1px solid black;border-radius:10px" /><h2 id="5-3【存储-读取数据】"><a href="#5-3【存储-读取数据】" class="headerlink" title="5.3【存储+读取数据】"></a>5.3【存储+读取数据】</h2><ol><li><p><code>Store</code>是一个保存：<strong>状态</strong>、<strong>业务逻辑</strong> 的实体，每个组件都可以<strong>读取</strong>、<strong>写入</strong>它。</p></li><li><p>它有三个概念：<code>state</code>、<code>getter</code>、<code>action</code>，相当于组件中的： <code>data</code>、 <code>computed</code> 和 <code>methods</code>。</p></li><li><p>具体编码：<code>src/store/count.ts</code></p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">sum</span>:<span class="number">6</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>具体编码：<code>src/store/talk.ts</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTalkStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;talk&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">talkList</span>:[</span><br><span class="line">        &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada01&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;你今天有点怪，哪里怪？怪好看的！&#x27;</span>&#125;,</span><br><span class="line">     &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada02&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;草莓、蓝莓、蔓越莓，你想我了没？&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada03&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;心里给你留了一块地，我的死心塌地&#x27;</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中使用<code>state</code>中的数据</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前求和为：&#123;&#123; sumStore.sum &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Count&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 引入对应的useXxxxxStore</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;useSumStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/sum&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用useXxxxxStore得到对应的store</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> sumStore = <span class="title function_">useSumStore</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;talk in talkStore.talkList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;talk.id&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; talk.content &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Count&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123;useTalkStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/talk&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> talkStore = <span class="title function_">useTalkStore</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="5-4-【修改数据】-三种方式"><a href="#5-4-【修改数据】-三种方式" class="headerlink" title="5.4.【修改数据】(三种方式)"></a>5.4.【修改数据】(三种方式)</h2><ol><li><p>第一种修改方式，直接修改</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">countStore.<span class="property">sum</span> = <span class="number">666</span></span><br></pre></td></tr></table></figure></li><li><p>第二种修改方式：批量修改</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">countStore.$patch(&#123;</span><br><span class="line">  <span class="attr">sum</span>:<span class="number">999</span>,</span><br><span class="line">  <span class="attr">school</span>:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>第三种修改方式：借助<code>action</code>修改（<code>action</code>中可以编写一些业务逻辑）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">/*************/</span></span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="comment">//加</span></span><br><span class="line">    <span class="title function_">increment</span>(<span class="params">value:number</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">sum</span> &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="comment">//操作countStore中的sum</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sum</span> += value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//减</span></span><br><span class="line">    <span class="title function_">decrement</span>(<span class="params">value:number</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">sum</span> &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sum</span> -= value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/*************/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中调用<code>action</code>即可</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用countStore</span></span><br><span class="line"><span class="keyword">const</span> countStore = <span class="title function_">useCountStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用对应action</span></span><br><span class="line">countStore.<span class="title function_">incrementOdd</span>(n.<span class="property">value</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-5-【storeToRefs】"><a href="#5-5-【storeToRefs】" class="headerlink" title="5.5.【storeToRefs】"></a>5.5.【storeToRefs】</h2><ul><li>借助<code>storeToRefs</code>将<code>store</code>中的数据转为<code>ref</code>对象，方便在模板中使用。</li><li>注意：<code>pinia</code>提供的<code>storeToRefs</code>只会将数据做转换，而<code>Vue</code>的<code>toRefs</code>会转换<code>store</code>中数据。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前求和为：&#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Count&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; useCountStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/count&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* 引入storeToRefs */</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* 得到countStore */</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> countStore = <span class="title function_">useCountStore</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* 使用storeToRefs转换countStore，随后解构 */</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> &#123;sum&#125; = <span class="title function_">storeToRefs</span>(countStore)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-6-【getters】"><a href="#5-6-【getters】" class="headerlink" title="5.6.【getters】"></a>5.6.【getters】</h2><ol><li><p>概念：当<code>state</code>中的数据，需要经过处理后再使用时，可以使用<code>getters</code>配置。</p></li><li><p>追加<code>getters</code>配置。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">    <span class="comment">/************/</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">sum</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">school</span>:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;</span><br><span class="line">    <span class="attr">bigSum</span>:(state):<span class="function"><span class="params">number</span> =&gt;</span> state.<span class="property">sum</span> *<span class="number">10</span>,</span><br><span class="line">    <span class="title function_">upperSchool</span>():string&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>. school.<span class="title function_">toUpperCase</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中读取数据：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;increment,decrement&#125; = countStore</span><br><span class="line"><span class="keyword">let</span> &#123;sum,school,bigSum,upperSchool&#125; = <span class="title function_">storeToRefs</span>(countStore)</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-7-【-subscribe】"><a href="#5-7-【-subscribe】" class="headerlink" title="5.7.【$subscribe】"></a>5.7.【$subscribe】</h2><p>通过 store 的 <code>$subscribe()</code> 方法侦听 <code>state</code> 及其变化</p><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">talkStore.$subscribe(<span class="function">(<span class="params">mutate,state</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;LoveTalk&#x27;</span>,mutate,state)</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;talk&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(talkList.<span class="property">value</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="5-8-【store组合式写法】"><a href="#5-8-【store组合式写法】" class="headerlink" title="5.8. 【store组合式写法】"></a>5.8. 【store组合式写法】</h2><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;nanoid&#125; <span class="keyword">from</span> <span class="string">&#x27;nanoid&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTalkStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;talk&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// talkList就是state</span></span><br><span class="line">  <span class="keyword">const</span> talkList = <span class="title function_">reactive</span>(</span><br><span class="line">    <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;talkList&#x27;</span>) <span class="keyword">as</span> <span class="built_in">string</span>) || []</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// getATalk函数相当于action</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getATalk</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 发请求，下面这行的写法是：连续解构赋值+重命名</span></span><br><span class="line">    <span class="keyword">let</span> &#123;<span class="attr">data</span>:&#123;<span class="attr">content</span>:title&#125;&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;https://api.uomg.com/api/rand.qinghua?format=json&#x27;</span>)</span><br><span class="line">    <span class="comment">// 把请求回来的字符串，包装成一个对象</span></span><br><span class="line">    <span class="keyword">let</span> obj = &#123;<span class="attr">id</span>:<span class="title function_">nanoid</span>(),title&#125;</span><br><span class="line">    <span class="comment">// 放到数组中</span></span><br><span class="line">    talkList.<span class="title function_">unshift</span>(obj)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;talkList,getATalk&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="6-组件通信"><a href="#6-组件通信" class="headerlink" title="6. 组件通信"></a>6. 组件通信</h1><p><strong><code>Vue3</code>组件通信和<code>Vue2</code>的区别：</strong></p><ul><li>移出事件总线，使用<code>mitt</code>代替。</li></ul><ul><li><code>vuex</code>换成了<code>pinia</code>。</li><li>把<code>.sync</code>优化到了<code>v-model</code>里面了。</li><li>把<code>$listeners</code>所有的东西，合并到<code>$attrs</code>中了。</li><li><code>$children</code>被砍掉了。</li></ul><p><strong>常见搭配形式：</strong></p><img src="https://s2.loli.net/2024/02/22/WZaSR8Mor15mfIT.png" alt="image-20231119185900990" style="zoom:60%;" /> <h2 id="6-1-【props】"><a href="#6-1-【props】" class="headerlink" title="6.1. 【props】"></a>6.1. 【props】</h2><p>概述：<code>props</code>是使用频率最高的一种通信方式，常用与 ：<strong>父 ↔ 子</strong>。</p><ul><li>若 <strong>父传子</strong>：属性值是<strong>非函数</strong>。</li><li>若 <strong>子传父</strong>：属性值是<strong>函数</strong>。</li></ul><p>父组件：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>父组件，<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>我的车：&#123;&#123; car &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>儿子给的玩具：&#123;&#123; toy &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Child</span> <span class="attr">:car</span>=<span class="string">&quot;car&quot;</span> <span class="attr">:getToy</span>=<span class="string">&quot;getToy&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Father&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./Child.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> car = <span class="title function_">ref</span>(<span class="string">&#x27;奔驰&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> toy = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 方法</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">getToy</span>(<span class="params">value:string</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">toy.<span class="property">value</span> = value</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>我的玩具：&#123;&#123; toy &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>父给我的车：&#123;&#123; car &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getToy(toy)&quot;</span>&gt;</span>玩具给父亲<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Child&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> toy = <span class="title function_">ref</span>(<span class="string">&#x27;奥特曼&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">defineProps</span>([<span class="string">&#x27;car&#x27;</span>,<span class="string">&#x27;getToy&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-2-【自定义事件】"><a href="#6-2-【自定义事件】" class="headerlink" title="6.2. 【自定义事件】"></a>6.2. 【自定义事件】</h2><ol><li>概述：自定义事件常用于：<strong>子 &#x3D;&gt; 父。</strong></li><li>注意区分好：原生事件、自定义事件。</li></ol><ul><li>原生事件：<ul><li>事件名是特定的（<code>click</code>、<code>mosueenter</code>等等）    </li><li>事件对象<code>$event</code>: 是包含事件相关信息的对象（<code>pageX</code>、<code>pageY</code>、<code>target</code>、<code>keyCode</code>）</li></ul></li><li>自定义事件：<ul><li>事件名是任意名称</li><li><strong style="color:red">事件对象<code>$event</code>: 是调用<code>emit</code>时所提供的数据，可以是任意类型！！！</strong ></li></ul></li></ul><ol start="3"><li><p>示例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--在父组件中，给子组件绑定自定义事件：--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Child</span> @<span class="attr">send-toy</span>=<span class="string">&quot;toy = $event&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注意区分原生事件与自定义事件中的$event--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toy = $event&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//子组件中，触发事件：</span></span><br><span class="line"><span class="variable language_">this</span>.$emit(<span class="string">&#x27;send-toy&#x27;</span>, 具体数据)</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-3-【mitt】"><a href="#6-3-【mitt】" class="headerlink" title="6.3. 【mitt】"></a>6.3. 【mitt】</h2><p>概述：与消息订阅与发布（<code>pubsub</code>）功能类似，可以实现任意组件间通信。</p><p>安装<code>mitt</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i mitt</span><br></pre></td></tr></table></figure><p>新建文件：<code>src\utils\emitter.ts</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入mitt </span></span><br><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&quot;mitt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建emitter</span></span><br><span class="line"><span class="keyword">const</span> emitter = <span class="title function_">mitt</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  // 绑定事件</span></span><br><span class="line"><span class="comment">  emitter.on(&#x27;abc&#x27;,(value)=&gt;&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;abc事件被触发&#x27;,value)</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment">  emitter.on(&#x27;xyz&#x27;,(value)=&gt;&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;xyz事件被触发&#x27;,value)</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  setInterval(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">    // 触发事件</span></span><br><span class="line"><span class="comment">    emitter.emit(&#x27;abc&#x27;,666)</span></span><br><span class="line"><span class="comment">    emitter.emit(&#x27;xyz&#x27;,777)</span></span><br><span class="line"><span class="comment">  &#125;, 1000);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">    // 清理事件</span></span><br><span class="line"><span class="comment">    emitter.all.clear()</span></span><br><span class="line"><span class="comment">  &#125;, 3000); </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建并暴露mitt</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> emitter</span><br></pre></td></tr></table></figure><p>接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; onUnmounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">emitter.<span class="title function_">on</span>(<span class="string">&#x27;send-toy&#x27;</span>,<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;send-toy事件被触发&#x27;</span>,value)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// 解绑事件</span></span><br><span class="line">  emitter.<span class="title function_">off</span>(<span class="string">&#x27;send-toy&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>【第三步】：提供数据的组件，在合适的时候触发事件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendToy</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 触发事件</span></span><br><span class="line">  emitter.<span class="title function_">emit</span>(<span class="string">&#x27;send-toy&#x27;</span>,toy.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意这个重要的内置关系，总线依赖着这个内置关系</strong></p><h2 id="6-4-【v-model】"><a href="#6-4-【v-model】" class="headerlink" title="6.4.【v-model】"></a>6.4.【v-model】</h2><ol><li><p>概述：实现 <strong>父↔子</strong> 之间相互通信。</p></li><li><p>前序知识 —— <code>v-model</code>的本质</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用v-model指令 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- v-model的本质是下面这行代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">:value</span>=<span class="string">&quot;userName&quot;</span> </span></span><br><span class="line"><span class="tag">  @<span class="attr">input</span>=<span class="string">&quot;userName =(&lt;HTMLInputElement&gt;$event.target).value&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>组件标签上的<code>v-model</code>的本质：<code>:moldeValue</code> ＋ <code>update:modelValue</code>事件。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 组件标签上使用v-model指令 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">AtguiguInput</span> <span class="attr">v-model</span>=<span class="string">&quot;userName&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 组件标签上v-model的本质 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">AtguiguInput</span> <span class="attr">:modelValue</span>=<span class="string">&quot;userName&quot;</span> @<span class="attr">update:model-value</span>=<span class="string">&quot;userName = $event&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">:value</span>=<span class="string">&quot;modelValue&quot;</span> </span></span><br><span class="line"><span class="tag">       @<span class="attr">input</span>=<span class="string">&quot;emit(&#x27;update:model-value&#x27;,$event.target.value)&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;AtguiguInput&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 接收props</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">defineProps</span>([<span class="string">&#x27;modelValue&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明事件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:model-value&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>也可以更换<code>value</code>，例如改成<code>abc</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 也可以更换value，例如改成abc--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">AtguiguInput</span> <span class="attr">v-model:abc</span>=<span class="string">&quot;userName&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 上面代码的本质如下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">AtguiguInput</span> <span class="attr">:abc</span>=<span class="string">&quot;userName&quot;</span> @<span class="attr">update:abc</span>=<span class="string">&quot;userName = $event&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">:value</span>=<span class="string">&quot;abc&quot;</span> </span></span><br><span class="line"><span class="tag">       @<span class="attr">input</span>=<span class="string">&quot;emit(&#x27;update:abc&#x27;,$event.target.value)&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;AtguiguInput&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 接收props</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">defineProps</span>([<span class="string">&#x27;abc&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明事件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:abc&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>如果<code>value</code>可以更换，那么就可以在组件标签上多次使用<code>v-model</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">AtguiguInput</span> <span class="attr">v-model:abc</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">v-model:xyz</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="6-5-【-attrs-】"><a href="#6-5-【-attrs-】" class="headerlink" title="6.5.【$attrs 】"></a>6.5.【$attrs 】</h2><ol><li><p>概述：<code>$attrs</code>用于实现<strong>当前组件的父组件</strong>，向<strong>当前组件的子组件</strong>通信（<strong>祖→孙</strong>）。</p></li><li><p>具体说明：<code>$attrs</code>是一个对象，包含所有父组件传入的标签属性。</p><blockquote><p> 注意：<code>$attrs</code>会自动排除<code>props</code>中声明的属性(可以认为声明过的 <code>props</code> 被子组件自己“消费”了)</p></blockquote></li></ol><p>父组件：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Child</span> <span class="attr">:a</span>=<span class="string">&quot;a&quot;</span> <span class="attr">:b</span>=<span class="string">&quot;b&quot;</span> <span class="attr">:c</span>=<span class="string">&quot;c&quot;</span> <span class="attr">:d</span>=<span class="string">&quot;d&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;&#123;x:100,y:200&#125;&quot;</span> <span class="attr">:updateA</span>=<span class="string">&quot;updateA&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Father&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./Child.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> a = <span class="title function_">ref</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> b = <span class="title function_">ref</span>(<span class="number">2</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> c = <span class="title function_">ref</span>(<span class="number">3</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> d = <span class="title function_">ref</span>(<span class="number">4</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">updateA</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">a.<span class="property">value</span> = value</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子组件：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GrandChild</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Child&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">GrandChild</span> <span class="keyword">from</span> <span class="string">&#x27;./GrandChild.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>孙组件：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grand-child&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>孙组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>a：&#123;&#123; a &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>b：&#123;&#123; b &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>c：&#123;&#123; c &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>d：&#123;&#123; d &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>x：&#123;&#123; x &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>y：&#123;&#123; y &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateA(666)&quot;</span>&gt;</span>点我更新A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;GrandChild&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">defineProps</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;updateA&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-6-【-refs、-parent】"><a href="#6-6-【-refs、-parent】" class="headerlink" title="6.6. 【$refs、$parent】"></a>6.6. 【$refs、$parent】</h2><ol><li><p>概述：</p><ul><li><code>$refs</code>用于 ：<strong>父→子。</strong></li><li><code>$parent</code>用于：<strong>子→父。</strong></li></ul></li><li><p>原理如下：</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>$refs</code></td><td>值为对象，包含所有被<code>ref</code>属性标识的<code>DOM</code>元素或组件实例。</td></tr><tr><td><code>$parent</code></td><td>值为对象，当前组件的父组件实例对象。</td></tr></tbody></table></li></ol><h2 id="6-7-【provide、inject】"><a href="#6-7-【provide、inject】" class="headerlink" title="6.7. 【provide、inject】"></a>6.7. 【provide、inject】</h2><ol><li><p>概述：实现<strong>祖孙组件</strong>直接通信</p></li><li><p>具体使用：</p><ul><li>在祖先组件中通过<code>provide</code>配置向后代组件提供数据</li><li>在后代组件中通过<code>inject</code>配置来声明接收数据</li></ul></li><li><p>具体编码：</p><p>【第一步】父组件中，使用<code>provide</code>提供数据</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>资产：&#123;&#123; money &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>汽车：&#123;&#123; car &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;money += 1&quot;</span>&gt;</span>资产+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;car.price += 1&quot;</span>&gt;</span>汽车价格+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Child</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Father&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./Child.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref,reactive,provide &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> money = <span class="title function_">ref</span>(<span class="number">100</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> car = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">brand</span>:<span class="string">&#x27;奔驰&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">price</span>:<span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 用于更新money的方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">updateMoney</span>(<span class="params">value:number</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    money.<span class="property">value</span> += value</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 提供数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">provide</span>(<span class="string">&#x27;moneyContext&#x27;</span>,&#123;money,updateMoney&#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">provide</span>(<span class="string">&#x27;car&#x27;</span>,car)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：子组件中不用编写任何东西，是不受到任何打扰的</p></blockquote><p>【第二步】孙组件中使用<code>inject</code>配置项接受数据。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grand-child&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是孙组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>资产：&#123;&#123; money &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>汽车：&#123;&#123; car &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateMoney(6)&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;GrandChild&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; inject &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 注入数据</span></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">let</span> &#123;money,updateMoney&#125; = <span class="title function_">inject</span>(<span class="string">&#x27;moneyContext&#x27;</span>,&#123;<span class="attr">money</span>:<span class="number">0</span>,<span class="attr">updateMoney</span>:<span class="function">(<span class="params">x:number</span>)=&gt;</span>&#123;&#125;&#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> car = <span class="title function_">inject</span>(<span class="string">&#x27;car&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="6-8-【pinia】"><a href="#6-8-【pinia】" class="headerlink" title="6.8. 【pinia】"></a>6.8. 【pinia】</h2><p>参考之前<code>pinia</code>部分的讲解</p><h2 id="6-9-【slot】"><a href="#6-9-【slot】" class="headerlink" title="6.9. 【slot】"></a>6.9. 【slot】</h2><h3 id="1-默认插槽"><a href="#1-默认插槽" class="headerlink" title="1. 默认插槽"></a>1. 默认插槽</h3><p><img src="https://s2.loli.net/2024/02/22/KDmNvArchICu3PF.png" alt="img"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        <span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;今日热门游戏&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;g in games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g.id&quot;</span>&gt;</span>&#123;&#123; g.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span><br><span class="line">子组件中：</span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 默认插槽 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-具名插槽"><a href="#2-具名插槽" class="headerlink" title="2. 具名插槽"></a>2. 具名插槽</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        <span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;今日热门游戏&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:s1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;g in games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g.id&quot;</span>&gt;</span>&#123;&#123; g.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">s2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span><br><span class="line">子组件中：</span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;s1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;s2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-作用域插槽"><a href="#3-作用域插槽" class="headerlink" title="3. 作用域插槽"></a>3. 作用域插槽</h3><ol><li><p>理解：<span style="color:red">数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。</span>（新闻数据在<code>News</code>组件中，但使用数据所遍历出来的结构由<code>App</code>组件决定）</p></li><li><p>具体编码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">      <span class="tag">&lt;<span class="name">Game</span> <span class="attr">v-slot</span>=<span class="string">&quot;params&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;Game v-slot:default=&quot;params&quot;&gt; --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;Game #default=&quot;params&quot;&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;g in params.games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g.id&quot;</span>&gt;</span>&#123;&#123; g.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Game</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件中：</span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;category&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今日游戏榜单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:games</span>=<span class="string">&quot;games&quot;</span> <span class="attr">a</span>=<span class="string">&quot;哈哈&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Category&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123;reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> games = <span class="title function_">reactive</span>([</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="string">&#x27;asgdytsa01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;英雄联盟&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="string">&#x27;asgdytsa02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王者荣耀&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="string">&#x27;asgdytsa03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;红色警戒&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123;<span class="attr">id</span>:<span class="string">&#x27;asgdytsa04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;斗罗大陆&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">        ])</span></span><br><span class="line"><span class="language-javascript">      </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="7-其它-API"><a href="#7-其它-API" class="headerlink" title="7. 其它 API"></a>7. 其它 API</h1><h2 id="7-1-【shallowRef-与-shallowReactive-】"><a href="#7-1-【shallowRef-与-shallowReactive-】" class="headerlink" title="7.1.【shallowRef 与 shallowReactive 】"></a>7.1.【shallowRef 与 shallowReactive 】</h2><h3 id="shallowRef"><a href="#shallowRef" class="headerlink" title="shallowRef"></a><code>shallowRef</code></h3><ol><li><p>作用：创建一个响应式数据，但只对顶层属性进行响应式处理。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> myVar = <span class="title function_">shallowRef</span>(initialValue);</span><br></pre></td></tr></table></figure></li><li><p>特点：只跟踪引用值的变化，不关心值内部的属性变化。</p></li></ol><h3 id="shallowReactive"><a href="#shallowReactive" class="headerlink" title="shallowReactive"></a><code>shallowReactive</code></h3><ol><li><p>作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> myObj = <span class="title function_">shallowReactive</span>(&#123; ... &#125;);</span><br></pre></td></tr></table></figure></li><li><p>特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。</p></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>通过使用 <a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowref"><code>shallowRef()</code></a> 和 <a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive"><code>shallowReactive()</code></a> 来绕开深度响应。浅层式 <code>API</code> 创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。</p></blockquote><h2 id="7-2-【readonly-与-shallowReadonly】"><a href="#7-2-【readonly-与-shallowReadonly】" class="headerlink" title="7.2.【readonly 与 shallowReadonly】"></a>7.2.【readonly 与 shallowReadonly】</h2><h3 id="readonly"><a href="#readonly" class="headerlink" title="readonly"></a><strong><code>readonly</code></strong></h3><ol><li><p>作用：用于创建一个对象的深只读副本。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> original = <span class="title function_">reactive</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">const</span> readOnlyCopy = <span class="title function_">readonly</span>(original);</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><ul><li>对象的所有嵌套属性都将变为只读。</li><li>任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。</li></ul></li><li><p>应用场景：</p><ul><li>创建不可变的状态快照。</li><li>保护全局状态或配置不被修改。</li></ul></li></ol><h3 id="shallowReadonly"><a href="#shallowReadonly" class="headerlink" title="shallowReadonly"></a><strong><code>shallowReadonly</code></strong></h3><ol><li><p>作用：与 <code>readonly</code> 类似，但只作用于对象的顶层属性。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> original = <span class="title function_">reactive</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">const</span> shallowReadOnlyCopy = <span class="title function_">shallowReadonly</span>(original);</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><ul><li><p>只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。</p></li><li><p>适用于只需保护对象顶层属性的场景。</p></li></ul></li></ol><h2 id="7-3-【toRaw-与-markRaw】"><a href="#7-3-【toRaw-与-markRaw】" class="headerlink" title="7.3.【toRaw 与 markRaw】"></a>7.3.【toRaw 与 markRaw】</h2><h3 id="toRaw"><a href="#toRaw" class="headerlink" title="toRaw"></a><code>toRaw</code></h3><ol><li><p>作用：用于获取一个响应式对象的原始对象， <code>toRaw</code> 返回的对象不再是响应式的，不会触发视图更新。</p><blockquote><p>官网描述：这是一个可以用于临时读取而不引起代理访问&#x2F;跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。</p></blockquote><blockquote><p>何时使用？ —— 在需要将响应式对象传递给非 <code>Vue</code> 的库或外部系统时，使用 <code>toRaw</code> 可以确保它们收到的是普通对象</p></blockquote></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive,toRaw,markRaw,isReactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* toRaw */</span></span><br><span class="line"><span class="comment">// 响应式对象</span></span><br><span class="line"><span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;tony&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;)</span><br><span class="line"><span class="comment">// 原始对象</span></span><br><span class="line"><span class="keyword">let</span> rawPerson = <span class="title function_">toRaw</span>(person)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* markRaw */</span></span><br><span class="line"><span class="keyword">let</span> citysd = <span class="title function_">markRaw</span>([</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;北京&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;上海&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;天津&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;重庆&#x27;</span>&#125;</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class="line"><span class="keyword">let</span> citys2 = <span class="title function_">reactive</span>(citys)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(person))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(rawPerson))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(citys))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(citys2))</span><br></pre></td></tr></table></figure></li></ol><h3 id="markRaw"><a href="#markRaw" class="headerlink" title="markRaw"></a><code>markRaw</code></h3><ol><li><p>作用：标记一个对象，使其<strong>永远不会</strong>变成响应式的。</p><blockquote><p>例如使用<code>mockjs</code>时，为了防止误把<code>mockjs</code>变为响应式对象，可以使用 <code>markRaw</code> 去标记<code>mockjs</code></p></blockquote></li><li><p>编码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* markRaw */</span></span><br><span class="line"><span class="keyword">let</span> citys = <span class="title function_">markRaw</span>([</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;北京&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;上海&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;天津&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;重庆&#x27;</span>&#125;</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class="line"><span class="keyword">let</span> citys2 = <span class="title function_">reactive</span>(citys)</span><br></pre></td></tr></table></figure></li></ol><h2 id="7-4-【customRef】"><a href="#7-4-【customRef】" class="headerlink" title="7.4.【customRef】"></a>7.4.【customRef】</h2><p>作用：创建一个自定义的<code>ref</code>，并对其依赖项跟踪和更新触发进行逻辑控制。</p><p>实现防抖效果（<code>useSumRef.ts</code>）：</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;customRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"><span class="attr">initValue</span>:<span class="built_in">string</span>,<span class="attr">delay</span>:<span class="built_in">number</span></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> msg = <span class="title function_">customRef</span>(<span class="function">(<span class="params">track,trigger</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">timer</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">track</span>() <span class="comment">// 告诉Vue数据msg很重要，要对msg持续关注，一旦变化就更新</span></span><br><span class="line">        <span class="keyword">return</span> initValue</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          initValue = value</span><br><span class="line">          <span class="title function_">trigger</span>() <span class="comment">//通知Vue数据msg变化了</span></span><br><span class="line">        &#125;, delay);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;) </span><br><span class="line">  <span class="keyword">return</span> &#123;msg&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件中使用：</p><h1 id="8-Vue3新组件"><a href="#8-Vue3新组件" class="headerlink" title="8. Vue3新组件"></a>8. Vue3新组件</h1><h2 id="8-1-【Teleport】"><a href="#8-1-【Teleport】" class="headerlink" title="8.1. 【Teleport】"></a>8.1. 【Teleport】</h2><ul><li>什么是Teleport？—— Teleport 是一种能够将我们的<strong>组件html结构</strong>移动到指定位置的技术。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">teleport</span> <span class="attr">to</span>=<span class="string">&#x27;body&#x27;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是一个弹窗<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是弹窗中的一些内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShow = false&quot;</span>&gt;</span>关闭弹窗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teleport</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-2-【Suspense】"><a href="#8-2-【Suspense】" class="headerlink" title="8.2. 【Suspense】"></a>8.2. 【Suspense】</h2><ul><li>等待异步组件时渲染一些额外内容，让应用有更好的用户体验 </li><li>使用步骤： <ul><li>异步引入组件</li><li>使用<code>Suspense</code>包裹组件，并配置好<code>default</code> 与 <code>fallback</code></li></ul></li></ul><figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineAsyncComponent,<span class="title class_">Suspense</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Child</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">()=&gt;</span><span class="keyword">import</span>(<span class="string">&#x27;./Child.vue&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是App组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Suspense</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Child</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:fallback</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>加载中.......<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-3-【全局API转移到应用对象】"><a href="#8-3-【全局API转移到应用对象】" class="headerlink" title="8.3.【全局API转移到应用对象】"></a>8.3.【全局API转移到应用对象】</h2><ul><li><code>app.component</code></li><li><code>app.config</code></li><li><code>app.directive</code></li><li><code>app.mount</code></li><li><code>app.unmount</code></li><li><code>app.use</code></li></ul><h2 id="8-4-【其他】"><a href="#8-4-【其他】" class="headerlink" title="8.4.【其他】"></a>8.4.【其他】</h2><ul><li><p>过渡类名 <code>v-enter</code> 修改为 <code>v-enter-from</code>、过渡类名 <code>v-leave</code> 修改为 <code>v-leave-from</code>。</p></li><li><p><code>keyCode</code> 作为 <code>v-on</code> 修饰符的支持。</p></li><li><p><code>v-model</code> 指令在组件上的使用已经被重新设计，替换掉了 <code>v-bind.sync。</code></p></li><li><p><code>v-if</code> 和 <code>v-for</code> 在同一个元素身上使用时的优先级发生了变化。</p></li><li><p>移除了<code>$on</code>、<code>$off</code> 和 <code>$once</code> 实例方法。</p></li><li><p>移除了过滤器 <code>filter</code>。</p></li><li><p>移除了<code>$children</code> 实例 <code>propert</code>。</p><p>……</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-Vue3简介&quot;&gt;&lt;a href=&quot;#1-Vue3简介&quot; class=&quot;headerlink&quot; title=&quot;1. Vue3简介&quot;&gt;&lt;/a&gt;1. Vue3简介&lt;/h1&gt;</summary>
    
    
    
    <category term="_A2-前端" scheme="https://kanoc.gitee.io/categories/A2-%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3.0" scheme="https://kanoc.gitee.io/categories/A2-%E5%89%8D%E7%AB%AF/vue3-0/"/>
    
    
    <category term="学习笔记" scheme="https://kanoc.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="vue3.0" scheme="https://kanoc.gitee.io/tags/vue3-0/"/>
    
  </entry>
  
  <entry>
    <title>解压密码是中文 怎么办？</title>
    <link href="https://kanoc.gitee.io/2024/02/04/%E8%A7%A3%E5%8E%8B%E5%AF%86%E7%A0%81%E6%98%AF%E4%B8%AD%E6%96%87-%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/"/>
    <id>https://kanoc.gitee.io/2024/02/04/%E8%A7%A3%E5%8E%8B%E5%AF%86%E7%A0%81%E6%98%AF%E4%B8%AD%E6%96%87-%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/</id>
    <published>2024-02-04T13:23:29.000Z</published>
    <updated>2025-06-09T03:27:45.260Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>解压密码是中文 怎么办？</strong></font></p><span id="more"></span><p><font color=#f26522 size=4 face=宋体><strong>一、安装unar软件包：</strong></font></p><ul><li><font color=#b0171f size=2 face=宋体><strong>Linux（Debian系列）：</strong></font></li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install unar</span><br></pre></td></tr></table></figure><ul><li><font color=#b0171f size=2 face=宋体><strong>Linux（RedHat系列）：</strong></font></li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install unar</span><br></pre></td></tr></table></figure><ul><li><font color=#b0171f size=2 face=宋体><strong>MacOS：</strong></font></li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install unar </span><br></pre></td></tr></table></figure><p><font color=#f26522 size=4 face=宋体><strong>二、使用unar来解压：</strong></font></p><ul><li><font color=#b0171f size=2 face=宋体><strong>例如：使用密码“数据科学交流群189158789”解压“机器学习.zip”到目录“机器学习2”的命令如下：</strong></font></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unar -e GBK -E GBK -p 数据科学交流群189158789 -o ./机器学习2 机器学习.zip</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;解压密码是中文 怎么办？&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A9-错误解决" scheme="https://kanoc.gitee.io/categories/A9-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
    
    <category term="中文解压密码" scheme="https://kanoc.gitee.io/categories/A9-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/%E4%B8%AD%E6%96%87%E8%A7%A3%E5%8E%8B%E5%AF%86%E7%A0%81/"/>
    
    
    <category term="中文解压密码" scheme="https://kanoc.gitee.io/tags/%E4%B8%AD%E6%96%87%E8%A7%A3%E5%8E%8B%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>使用coder-server打造在线IDE</title>
    <link href="https://kanoc.gitee.io/2024/01/27/%E4%BD%BF%E7%94%A8coder-server%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BFIDE/"/>
    <id>https://kanoc.gitee.io/2024/01/27/%E4%BD%BF%E7%94%A8coder-server%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BFIDE/</id>
    <published>2024-01-27T13:31:01.000Z</published>
    <updated>2025-06-09T04:02:04.886Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>使用coder-server打造在线IDE：</strong></font></p><span id="more"></span><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><font color=#f26522 size=4 face=宋体><strong>前言：</strong></font></h2><p>在平时的学习工作中，我们经常会用到代码编辑器，Vscode已经成为我们的首选。但是本地编辑器有个弊端就是当我们在家庭和公司之间移动的时候，无法连续编码。这个时候就有很多新兴的在线编辑器（web IDE）出现了，目前我最常用的就是腾讯的cloudstudio，但是其每天免费4小时的使用时长在某些时候可能不够用，这个时候我们就需要拥有自己的在线编辑器了。今天我们就一起来介绍下在线编辑器coder-server环境的搭建和基础使用。</p><h2 id="关于cloud-studio"><a href="#关于cloud-studio" class="headerlink" title="关于cloud_studio"></a><font color=#f26522 size=4 face=宋体><strong>关于cloud_studio</strong></font></h2><p>首先声明，这不是广告。仅仅因为其免费好用。</p><p>我们可以在<a href="https://coding.net/">coding.net</a>注册账号，登录后，点击导航栏的Cloud Studio即可进入。<br><img src="https://s2.loli.net/2024/01/27/xsLaieJVWdAmqNP.png" alt="cloudstudio"></p><p>然后我们根据自己需要的环境类型创建虚拟环境即可。</p><p><img src="https://s2.loli.net/2024/01/27/S3OjfvNbCHYm9hK.png" alt="环境类型"></p><p>然后你就得到了一个非常方便好用的在线编辑器。</p><p><img src="https://s2.loli.net/2024/01/27/ClBLONA4EgbaZH5.png" alt="cloudstudio8c4g"></p><blockquote><p>从上图可以看到，这台服务器的性能还是很不错的，8核4G很强了，免费的还要什么自行车。</p></blockquote><p>cloudstudio非常适合白嫖党，但是今天它不是主角。</p><h2 id="coder-server："><a href="#coder-server：" class="headerlink" title="coder-server："></a><font color=#00b2c2 size=5 face=宋体><strong>coder-server：</strong></font></h2><p>coder-server一个开源的基于vscode开发的在线编辑器工具。其支持二进制部署、Docker部署、HemlChart部署，目前还不支持windows部署，但是已经足够我们使用了。</p><p>具体部署可以参考官方文档：<a href="https://coder.com/docs/code-server/latest/install%E3%80%82">https://coder.com/docs/code-server/latest/install。</a></p><p>这里我们选择相对简单快捷的方式，Docker部署。</p><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a><font color=#f26522 size=4 face=宋体><strong>前置条件</strong></font></h3><p>在部署coder-server前，你需要准备一台Linux虚机（建议CentOS 7），你可以去云厂商购买（用于生产），也可以使用VMware在个人电脑创建虚机（用于学习）。</p><p>我是购买的腾讯云的轻量应用服务器。</p><h3 id="拉取coder-server镜像"><a href="#拉取coder-server镜像" class="headerlink" title="拉取coder-server镜像"></a><font color=#f26522 size=4 face=宋体><strong>拉取coder-server镜像</strong></font></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull codercom/code-server</span><br></pre></td></tr></table></figure><h3 id="启动coder-server"><a href="#启动coder-server" class="headerlink" title="启动coder-server"></a><font color=#f26522 size=4 face=宋体><strong>启动coder-server</strong></font></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d  --name coder-server -p 8082:8080 -e PASSWORD=123 codercom/code-server:latest</span><br></pre></td></tr></table></figure><p>启动完成后，我们需要在云服务器的防火墙菜单中打开8082端口，然后就可以使用云服务器的公网ip进行登录使用了。（如果你是本地虚拟机，不需要处理防火墙，直接在浏览器访问虚拟机的ip:8082即可）</p><h3 id="访问coder-server"><a href="#访问coder-server" class="headerlink" title="访问coder-server"></a><font color=#f26522 size=4 face=宋体><strong>访问coder-server</strong></font></h3><p>我们在浏览器访问云服务器的公网ip:8082。</p><p><img src="https://s2.loli.net/2024/01/27/pkbsfB8w5rvVyM1.png" alt="coder-server登录界面"></p><p>输入密码123登录。<br><img src="https://s2.loli.net/2024/01/27/1HuUbnL8NZvj62T.png" alt="loginok"></p><p>哇哦，这不就是vscode本vscode嘛。</p><h3 id="安装插件："><a href="#安装插件：" class="headerlink" title="安装插件："></a><font color=#00b2c2 size=5 face=宋体><strong>安装插件：</strong></font></h3><p>coder-server和vscode一样，支持安装插件，我选择了几个常用的插件安装测试，均完美支持。</p><p><img src="https://s2.loli.net/2024/01/27/luRLOitqv37s1I2.png" alt="plugin"></p><p>编码体验</p><p>简单体验了下，实际编码体验和vscode没有差别。大家可以放心使用。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a><font color=#f26522 size=4 face=宋体><strong>Tips</strong></font></h3><p>因为coder-server专注于编辑器而对语言本身稍有忽略，比如其内置的python没有pip3工具，需要自己安装；而且内置的deb源速度较慢，需要自行替换。</p><h4 id="修改deb源"><a href="#修改deb源" class="headerlink" title="修改deb源"></a><font color=#f26522 size=4 face=宋体><strong>修改deb源</strong></font></h4><p>因为自带的vi不要用，所以我们使用以下方式修改deb源，参考：<a href="https://www.u1s1.vip/archives/tools">常用工具大全</a>。</p><ol><li>复制国内源地址到编辑器的文件aaa中</li><li>使用命令 <code>cat aaa &gt; /etc/apt/sources.list</code></li><li>使用命令<code>apt update</code>更新源</li></ol><h4 id="安装pip3"><a href="#安装pip3" class="headerlink" title="安装pip3"></a><font color=#f26522 size=4 face=宋体><strong>安装pip3</strong></font></h4><p>在完成了修改deb源和更新deb源之后，我们就可以使用命令<code>apt install python3-pip</code>来安装pip3了。</p><p>安装完成后，你就可以安装你所需要的库了。</p><p>亲测可行。赶快行动起来吧。</p><p>到此，结束。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;使用coder-server打造在线IDE：&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A8-工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="在线编辑器" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
    <category term="在线编辑" scheme="https://kanoc.gitee.io/tags/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91/"/>
    
    <category term="部署" scheme="https://kanoc.gitee.io/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="开发" scheme="https://kanoc.gitee.io/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>清除 宝塔面板 + Linux ssh 登陆日志</title>
    <link href="https://kanoc.gitee.io/2024/01/16/%E6%B8%85%E9%99%A4-%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF-Linux-ssh-%E7%99%BB%E9%99%86%E6%97%A5%E5%BF%97/"/>
    <id>https://kanoc.gitee.io/2024/01/16/%E6%B8%85%E9%99%A4-%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF-Linux-ssh-%E7%99%BB%E9%99%86%E6%97%A5%E5%BF%97/</id>
    <published>2024-01-16T11:21:22.000Z</published>
    <updated>2025-06-09T03:58:57.212Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>清除 宝塔面板 + Linux ssh 登陆日志：</strong></font></p><span id="more"></span><p><font color=#f26522 size=4 face=宋体><strong><strong>1、登录宝塔面板，会在“面板操作日志”里，留下我们的登录信息</strong></strong></font></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/www/server/panel/data/default.db    <span class="comment"># 用navicat打开清除</span></span><br></pre></td></tr></table></figure><p><font color=#f26522 size=4 face=宋体><strong><strong>2、清除 Linux SSH 登陆的 日志信息</strong></strong></font></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下面的命令 直接执行即可</span></span><br><span class="line">cat /dev/null &gt; /var/log/wtmp</span><br><span class="line">cat /dev/null &gt; /var/log/btmp</span><br><span class="line">cat /dev/null &gt; /var/log/lastlog</span><br><span class="line">cat /dev/null &gt; /var/log/secure</span><br></pre></td></tr></table></figure><p><font color=#f26522 size=4 face=宋体><strong><strong>3、Windows 清除远程桌面登陆</strong></strong></font></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 步骤1. 按“Win + R”键，然后输入“CMD”打开命令提示符</span></span><br><span class="line"><span class="comment"># 步骤2. 然后依次输入以下命令，并在每个命令输入完成按下回车键</span></span><br><span class="line">reg delete “HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default” /va /f</span><br><span class="line">reg delete “HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers” /f</span><br><span class="line">reg add “HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers”</span><br><span class="line"><span class="keyword">del</span> /ah %homepath%\documents\default.rdp</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;清除 宝塔面板 + Linux ssh 登陆日志：&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A3-linux" scheme="https://kanoc.gitee.io/categories/A3-linux/"/>
    
    <category term="宝塔面板" scheme="https://kanoc.gitee.io/categories/A3-linux/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    
    
    <category term="运维" scheme="https://kanoc.gitee.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="系统" scheme="https://kanoc.gitee.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="宝塔" scheme="https://kanoc.gitee.io/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>逆向 参考站点记录</title>
    <link href="https://kanoc.gitee.io/2023/12/25/%E9%80%86%E5%90%91%20%E5%8F%82%E8%80%83%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    <id>https://kanoc.gitee.io/2023/12/25/%E9%80%86%E5%90%91%20%E5%8F%82%E8%80%83%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/</id>
    <published>2023-12-24T19:14:28.000Z</published>
    <updated>2025-06-09T08:20:27.975Z</updated>
    
    <content type="html"><![CDATA[<h4 id="逆向-JS-参考非常具有指导性-：数据科学SourceResearch"><a href="#逆向-JS-参考非常具有指导性-：数据科学SourceResearch" class="headerlink" title="逆向 JS 参考非常具有指导性 ：数据科学SourceResearch"></a>逆向 JS 参考非常具有指导性 ：<a href="https://www.resourch.com/">数据科学SourceResearch</a></h4><span id="more"></span><h4 id="12-种方法来隐藏您的机器人自动化检测，如何使-Selenium-不可检测和隐身：https-www-itblogcn-com-article-2034-html"><a href="#12-种方法来隐藏您的机器人自动化检测，如何使-Selenium-不可检测和隐身：https-www-itblogcn-com-article-2034-html" class="headerlink" title="12 种方法来隐藏您的机器人自动化检测，如何使 Selenium 不可检测和隐身：https://www.itblogcn.com/article/2034.html"></a>12 种方法来隐藏您的机器人自动化检测，如何使 Selenium 不可检测和隐身：<a href="https://www.itblogcn.com/article/2034.html">https://www.itblogcn.com/article/2034.html</a></h4><h4 id="網絡爬蟲-cloudflare五秒等待驗證逆向破解：https-www-twblogs-net-a-5d8c8d4fbd9eee5327001af8"><a href="#網絡爬蟲-cloudflare五秒等待驗證逆向破解：https-www-twblogs-net-a-5d8c8d4fbd9eee5327001af8" class="headerlink" title="網絡爬蟲-cloudflare五秒等待驗證逆向破解：https://www.twblogs.net/a/5d8c8d4fbd9eee5327001af8"></a>網絡爬蟲-cloudflare五秒等待驗證逆向破解：<a href="https://www.twblogs.net/a/5d8c8d4fbd9eee5327001af8">https://www.twblogs.net/a/5d8c8d4fbd9eee5327001af8</a></h4><h5 id="逆向lin狗-大佬-https-developer-aliyun-com-profile-iaxsqtcumsgky-highScore-1-spm-a2c6h-24874632-expert-profile-5-27efd78f3t7PF1"><a href="#逆向lin狗-大佬-https-developer-aliyun-com-profile-iaxsqtcumsgky-highScore-1-spm-a2c6h-24874632-expert-profile-5-27efd78f3t7PF1" class="headerlink" title="逆向lin狗 大佬 &#x3D;&gt;https://developer.aliyun.com/profile/iaxsqtcumsgky/highScore_1?spm=a2c6h.24874632.expert-profile.5.27efd78f3t7PF1"></a>逆向lin狗 大佬 &#x3D;&gt;<a href="https://developer.aliyun.com/profile/iaxsqtcumsgky/highScore_1?spm=a2c6h.24874632.expert-profile.5.27efd78f3t7PF1">https://developer.aliyun.com/profile/iaxsqtcumsgky/highScore_1?spm=a2c6h.24874632.expert-profile.5.27efd78f3t7PF1</a></h5><h4 id="Cloudflare-小记：https-blog-csdn-net-weixin-58584029-article-details-128719446"><a href="#Cloudflare-小记：https-blog-csdn-net-weixin-58584029-article-details-128719446" class="headerlink" title="Cloudflare 小记：https://blog.csdn.net/weixin_58584029/article/details/128719446"></a><font color=#00b2c2 size=5 face=宋体><strong>Cloudflare 小记：</strong></font><a href="https://blog.csdn.net/weixin_58584029/article/details/128719446">https://blog.csdn.net/weixin_58584029/article/details/128719446</a></h4><h5 id="Selenium真正绕过webdriver检测-https-www-cnblogs-com-Wl55387370-p-16553574-html"><a href="#Selenium真正绕过webdriver检测-https-www-cnblogs-com-Wl55387370-p-16553574-html" class="headerlink" title="     Selenium真正绕过webdriver检测                      https://www.cnblogs.com/Wl55387370/p/16553574.html"></a><a href="https://www.cnblogs.com/Wl55387370/p/16553574.html">     Selenium真正绕过webdriver检测         </a>             <a href="https://www.cnblogs.com/Wl55387370/p/16553574.html">https://www.cnblogs.com/Wl55387370/p/16553574.html</a></h5><h6 id="关键词搜索：selenium绕过检测"><a href="#关键词搜索：selenium绕过检测" class="headerlink" title="关键词搜索：selenium绕过检测"></a>关键词搜索：selenium绕过检测</h6>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;逆向-JS-参考非常具有指导性-：数据科学SourceResearch&quot;&gt;&lt;a href=&quot;#逆向-JS-参考非常具有指导性-：数据科学SourceResearch&quot; class=&quot;headerlink&quot; title=&quot;逆向 JS 参考非常具有指导性 ：数据科学SourceResearch&quot;&gt;&lt;/a&gt;逆向 JS 参考非常具有指导性 ：&lt;a href=&quot;https://www.resourch.com/&quot;&gt;数据科学SourceResearch&lt;/a&gt;&lt;/h4&gt;</summary>
    
    
    
    <category term="_A7-逆向" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/"/>
    
    <category term="参考" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/%E5%8F%82%E8%80%83/"/>
    
    
    <category term="逆向" scheme="https://kanoc.gitee.io/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="记录" scheme="https://kanoc.gitee.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
    <category term="Cloudflare" scheme="https://kanoc.gitee.io/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>黑客工具之Google Hacking的简单用法</title>
    <link href="https://kanoc.gitee.io/2023/11/21/%E9%BB%91%E5%AE%A2%E5%B7%A5%E5%85%B7%E4%B9%8BGoogle-Hacking%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/"/>
    <id>https://kanoc.gitee.io/2023/11/21/%E9%BB%91%E5%AE%A2%E5%B7%A5%E5%85%B7%E4%B9%8BGoogle-Hacking%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/</id>
    <published>2023-11-20T18:37:29.000Z</published>
    <updated>2025-06-09T03:25:19.364Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>黑客工具之Google Hacking的简单用法：</strong></font></p><span id="more"></span><p>本文搬运自：<a href="https://zhuanlan.zhihu.com/p/400365865">黑客工具之Google Hacking的简单用法 - 知乎 (zhihu.com)</a></p><ul><li>感谢大神：<a href="https://www.zhihu.com/people/shen-tou-ce-shi-yan-jiu-yuan-9ling">黑客老鸟-九青</a> 无私的技术分享</li></ul><p><a href="https://zhuanlan.zhihu.com/p/394955217">黑客工具之Sqlmap详细使用教程 - 知乎 (zhihu.com)</a></p><p><font color=#f26522 size=4 face=宋体><strong>一、Google Hacking简介</strong></font></p><p><font color=#b0171f size=2 face=宋体><strong>Google Hacking 是利用谷歌搜索的强大，来在浩瀚的互联网中搜索到我们需要的信息。轻量级的搜索可以搜素出一些遗留后门，不想被发现的后台入口，中量级的搜索出一些用户信息泄露，源代码泄露，未授权访问等等，重量级的则可能是mdb文件下载，CMS 未被锁定install页面，网站配置密码，php远程文件包含漏洞等重要信息。</strong></font></p><p><font color=#f26522 size=4 face=宋体><strong>工具文章合集：</strong></font></p><p><font color=#b0171f size=2 face=宋体><strong>利用Google搜索我们想要的信息，需要配合谷歌搜索引擎的一些语法：</strong></font></p><h2 id="基本搜索："><a href="#基本搜索：" class="headerlink" title="基本搜索："></a><font color=#00b2c2 size=5 face=宋体><strong>基本搜索：</strong></font></h2><ul><li><font color=#b0171f size=2 face=宋体><strong>逻辑与：and</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>逻辑或： or</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>逻辑非： -</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>完整匹配：”关键词”</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>通配符：* ?</strong></font></li></ul><h2 id="高级搜索："><a href="#高级搜索：" class="headerlink" title="高级搜索："></a><font color=#00b2c2 size=5 face=宋体><strong>高级搜索：</strong></font></h2><p><strong><code>intext:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>寻找正文中含有关键字的网页，例如： <strong><code>intext:后台登录</code></strong> 将只返回正文中包含 后台登录 的网页</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/NXACjRzpHneSYwQ.webp" alt="img"></p><p><strong><code>intitle:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>寻找标题中含有关键字的网页，例如： <strong><code>intitle:后台登录</code></strong> 将只返回标题中包含 后台登录 的网页，<strong><code>intitle:后台登录 密码</code></strong> 将返回标题中包含黑客而正文中包含中国的网页</strong></font></p><img src="https://s2.loli.net/2023/11/21/3gvZFKjqV72Odth.webp" alt="img" style="zoom:80%;" /><p><strong><code>allintitle:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>用法和intitle类似，只不过可以指定多个词，例如： <strong><code>alltitle:后台登录 管理员</code></strong> 将返回标题中包含黑客 和中国的网页</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/9OmrYuAB7IQkanX.webp" alt="img"></p><p><strong><code>inurl：</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>将返回url中含有关键词的网页：例如：<strong><code>inurl:Login</code></strong> 将返回url中含有 Login 的网页</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/5iV9hNSIz8kXrRj.webp" alt="img"></p><p><font color=#b0171f size=2 face=宋体><strong>查找管理员登录页面</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/l7qb1jJod4PLUxi.webp" alt="img"></p><p><font color=#b0171f size=2 face=宋体><strong>查找后台数据库管理页面</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/IpNlc1jhCStTdea.webp" alt="img"></p><p><strong><code>allinurl:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>用法和inurl类似，只不过可以指定多个词，例如：<strong><code>inurl:Login admin</code></strong> 将返回url中含有 Login 和 admin 的网页</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/krHj4pNaDJLI1v3.webp" alt="img"></p><p><strong><code>site:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>指定访问的站点，例如： <strong>site:<a href="https://link.zhihu.com/?target=http://baidu.com">http://baidu.com</a> inurl:Login</strong> 将只在<a href="https://link.zhihu.com/?target=http://baidu.com">http://baidu.com</a> 中查找url中含有 Login的网页</strong></font></p><p><img src="https://s2.loli.net/2023/11/21/EYzLCaeMoH6h7pF.webp" alt="img"></p><p><strong><code>filetype:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>指定访问的文件类型，例如：<strong><code>site:baidu.com filetype:pdf</code></strong> 将只返回<a href="http://baidu.com站点上文件类型为pdf的网页/">http://baidu.com站点上文件类型为pdf的网页</a></strong></font></p><p><img src="https://s2.loli.net/2023/11/21/IapXLzVETZdBcb2.webp" alt="img"></p><p><strong><code>link:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>指定链接的网页，例如：<strong><code>link:http://www.baidu.com</code></strong> 将返回所有包含指向 <a href="http://www.baidu.com的网页/">http://www.baidu.com的网页</a></strong></font></p><p><img src="https://s2.loli.net/2023/11/21/vUMQljuhrH39ICO.webp" alt="img"></p><p><strong><code>related:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>相似类型的网页，例如：<strong><code>related:http://www.xjtu.edu.cn</code></strong> 将返回与 <a href="http://www.xjtu.edu.cn相似的页面,相似指的是网页的布局相似/">http://www.xjtu.edu.cn相似的页面，相似指的是网页的布局相似</a></strong></font></p><p><img src="https://s2.loli.net/2023/11/21/ZckzpHesimbP7OS.webp" alt="img"></p><p><strong><code>cache:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>网页快照，谷歌将返回给你他存储下来的历史页面，如果你同时制定了其他查询词，将在搜索结果里以高亮显示，例如：<strong><code>cache:http://www.hackingspirits.com guest</code></strong> ，将返回指定网站的缓存，并且正文中含有guest</strong></font></p><p><strong><code>info:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>返回站点的指定信息，例如：<code>info:http://www.baidu.com</code> 将返回百度的一些信息</strong></font></p><p><strong><code>define:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>返回某个词语的定义，例如：<code>define:Hacker</code>　　将返回关于Hacker的定义</strong></font></p><p><strong><code>phonebook:</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>电话簿查询美国街道地址和电话号码信息。例如：<code>phonebook:Lisa+CA</code> 将返回名字里面包含Lisa并住在加州的人的所有名字</strong></font></p><p><strong><code>查找网站后台</code></strong></p><ul><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com intext:管理</code></strong></font></li><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com inurl:login</code></strong></font></li><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com intitle:后台</code></strong></font></li></ul><p><strong><code>查看服务器使用的程序</code></strong></p><ul><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com filetype:asp</code></strong></font></li><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com filetype:php</code></strong></font></li><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com filetype:jsp</code></strong></font></li><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com filetype:aspx</code></strong></font></li></ul><p><strong><code>查看上传漏洞</code></strong></p><ul><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com inurl:file</code></strong></font></li><li><font color=#b0171f size=2 face=宋体><strong><code>site:http://xx.com inurl:load</code></strong></font></li></ul><p><strong><code>Index of</code></strong></p><p><font color=#b0171f size=2 face=宋体><strong>利用 <code>Index of</code>语法去发现允许目录浏览的web网站，就像在本地的普通目录一样。下面是一些有趣的查询：</strong></font></p><ul><li><code>index of /admin</code></li><li><code>index of /passwd</code></li><li><code>index of /passwd</code></li><li><code>index of /mail</code></li><li><code>&quot;index of /&quot; +passwd</code></li><li><code>&quot;index of /&quot; +password.txt</code></li><li><code>&quot;index of /&quot; +.htaccess</code></li><li><code>&quot;index of /root&quot;</code></li><li><code>&quot;index of /cgi-bin&quot;</code></li><li><code>&quot;index of /logs&quot;</code></li><li><code>&quot;index of /config&quot;</code></li></ul><p><font color=#00b2c2 size=5 face=宋体><strong><strong><code>inurl</code></strong></strong></font></p><p><font color=#b0171f size=2 face=宋体><strong>而上面这些命令中用的最多的就是 <code>inurl: </code>了，利用这个命令，可以查到很多意想不到的东西</strong></font></p><ul><li><font color=#b0171f size=2 face=宋体><strong>利用 allinurl:winnt&#x2F;system32&#x2F; 查询：列出的服务器上本来应该受限制的诸如“system32” 等目录，如果你运气足够好，你会发现“system32” 目录里的“cmd.exe” 文件，并能执行他，接下来就是提升权限并攻克了。</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>查询 allinurl:wwwboard&#x2F;passwd.txt 将列出所有有“WWWBoard Password vulnerability”漏洞的服务器，阅读更多请参见下面链接。</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>查询 inurl:.bash_history 将列出互联网上可以看见 “inurl:.bash_history” 文件的服务器。这是一个命令历史文件，这个文件包含了管理员执行的命令，有时会包含一些敏感信息比如管理员键入的密码。</strong></font></li><li><font color=#b0171f size=2 face=宋体><strong>查询 inurl:config.txt 将看见网上暴露了“inurl:config.txt”文件的服务器，这个文件包含了经过哈希编码的管理员的密码和数据库存取的关键</strong></font>信息。</li></ul><p><font color=#f26522 size=4 face=宋体><strong>还有一些其他一些使用“<code>inurl:</code>”和“<code>allinurl:</code>”查询组合的例子：</strong></font></p><ul><li><code>inurl:admin filetype:txt</code></li><li><code>inurl:admin filetype:db</code></li><li><code>inurl:admin filetype:cfg</code></li><li><code>inurl:mysql filetype:cfg</code></li><li><code>inurl:passwd filetype:txt</code></li><li><code>inurl:”wwwroot/*.”</code></li><li><code>inurl:adpassword.txt</code></li><li><code>inurl:webeditor.php</code></li><li><code>inurl:file_upload.php</code></li><li><code>inurl:gov filetype:xls “restricted”</code></li><li><code>index of ftp +.mdb allinurl:/cgi-bin/ +mailto</code></li></ul><h2 id="查找有可能存在SQL注入的网站："><a href="#查找有可能存在SQL注入的网站：" class="headerlink" title="查找有可能存在SQL注入的网站："></a><font color=#00b2c2 size=5 face=宋体><strong>查找有可能存在SQL注入的网站：</strong></font></h2><p><strong><code>inurl:id=1</code></strong></p><p><img src="https://s2.loli.net/2023/11/21/LW1ycq9jo4hXItm.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;黑客工具之Google Hacking的简单用法：&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A6-渗透" scheme="https://kanoc.gitee.io/categories/A6-%E6%B8%97%E9%80%8F/"/>
    
    <category term="搜索工具" scheme="https://kanoc.gitee.io/categories/A6-%E6%B8%97%E9%80%8F/%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="渗透" scheme="https://kanoc.gitee.io/tags/%E6%B8%97%E9%80%8F/"/>
    
    <category term="hack" scheme="https://kanoc.gitee.io/tags/hack/"/>
    
    <category term="谷歌搜索工具" scheme="https://kanoc.gitee.io/tags/%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>根据主视频，自动设置片头的分辨率、Fps、编码器</title>
    <link href="https://kanoc.gitee.io/2023/08/15/%E6%A0%B9%E6%8D%AE%E4%B8%BB%E8%A7%86%E9%A2%91%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%AE%BE%E7%BD%AE%E7%89%87%E5%A4%B4%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%81Fps%E3%80%81%E7%BC%96%E7%A0%81%E5%99%A8/"/>
    <id>https://kanoc.gitee.io/2023/08/15/%E6%A0%B9%E6%8D%AE%E4%B8%BB%E8%A7%86%E9%A2%91%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%AE%BE%E7%BD%AE%E7%89%87%E5%A4%B4%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%81Fps%E3%80%81%E7%BC%96%E7%A0%81%E5%99%A8/</id>
    <published>2023-08-15T09:26:08.000Z</published>
    <updated>2025-06-09T03:26:51.595Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>根据主视频，自动设置片头的分辨率、Fps、编码器：</strong></font></p><span id="more"></span><ul><li><font color=#f26522 size=4 face=宋体><strong>前提：</strong></font><ul><li><font color=#b0171f size=3 face=宋体><strong>安装：ffmpeg</strong></font></li><li><font color=#b0171f size=3 face=宋体><strong>安装：python库 opencv-python <code>pip3 install opencv-python</code></strong></font></li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">set_start_video</span>(<span class="params">self, video_path, start_video_path</span>):</span><br><span class="line">  <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param video_path: 原始mp4 绝对路径</span></span><br><span class="line"><span class="string">    :param start_video_path:   片头的绝对路径</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">    video = cv2.VideoCapture(<span class="string">f&quot;<span class="subst">&#123;video_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># print(height, width)</span></span><br><span class="line">    <span class="comment"># resolution1 = (int(video.get(cv2.CAP_PROP_FRAME_WIDTH)), int(video.get(cv2.CAP_PROP_FRAME_HEIGHT)))</span></span><br><span class="line">    <span class="comment"># print(resolution1)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取高度</span></span><br><span class="line">    height = <span class="built_in">int</span>(video.get(cv2.CAP_PROP_FRAME_HEIGHT))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取宽度</span></span><br><span class="line">    width = <span class="built_in">int</span>(video.get(cv2.CAP_PROP_FRAME_WIDTH))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取帧率</span></span><br><span class="line">    fps = video.get(cv2.CAP_PROP_FPS)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># # 向上取整</span></span><br><span class="line">    <span class="comment"># fps_a = math.ceil(fps)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保留2位小数</span></span><br><span class="line">    fps_a = <span class="string">&#x27;%.2f&#x27;</span> % fps</span><br><span class="line">    <span class="comment"># &quot;ffmpeg -i a.mp4 -r 30 b.mp4&quot;</span></span><br><span class="line">    <span class="comment"># print(fps_a)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 退出cv2</span></span><br><span class="line">    video.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 开始获取编码器 因为我的本地opencv库版本低，尝试获取编码器格式失败，所以这里用另一种方式获取</span></span><br><span class="line">    command = <span class="string">f&quot;ffprobe -v quiet -select_streams v:0 -show_entries stream=codec_name -of default &#x27;<span class="subst">&#123;video_path&#125;</span>/v1.mp4&#x27;&quot;</span></span><br><span class="line">    result = subprocess.run(command, shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line">    encoder = result.stdout.decode().strip()</span><br><span class="line">    new_encoder = re.search(<span class="string">&quot;codec_name=(?P&lt;codec_name&gt;.*?)\n&quot;</span>, encoder)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 编写执行命令字符串</span></span><br><span class="line">    cmd_str = <span class="string">f&quot;ffmpeg -i <span class="subst">&#123;start_video_path&#125;</span> -vf scale=<span class="subst">&#123;width&#125;</span>:<span class="subst">&#123;height&#125;</span> -r <span class="subst">&#123;fps_a&#125;</span> -acodec aac -vcodec <span class="subst">&#123;new_encoder.group(<span class="string">&#x27;codec_name&#x27;</span>)&#125;</span> <span class="subst">&#123;video_path&#125;</span>/xxx.ts&quot;</span>   <span class="comment"># 这里的xxx.ts 就是我们根据主视频修改后的片头</span></span><br><span class="line">    <span class="comment"># 开始执行命令</span></span><br><span class="line">    os.system(cmd_str)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;根据主视频，自动设置片头的分辨率、Fps、编码器：&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A4-FFmpeg" scheme="https://kanoc.gitee.io/categories/A4-FFmpeg/"/>
    
    <category term="设置片头" scheme="https://kanoc.gitee.io/categories/A4-FFmpeg/%E8%AE%BE%E7%BD%AE%E7%89%87%E5%A4%B4/"/>
    
    
    <category term="ffmpeg" scheme="https://kanoc.gitee.io/tags/ffmpeg/"/>
    
    <category term="python" scheme="https://kanoc.gitee.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>利用m3u8文件机制添加片头</title>
    <link href="https://kanoc.gitee.io/2023/08/15/%E5%88%A9%E7%94%A8m3u8%E6%96%87%E4%BB%B6%E6%9C%BA%E5%88%B6%E6%B7%BB%E5%8A%A0%E7%89%87%E5%A4%B4/"/>
    <id>https://kanoc.gitee.io/2023/08/15/%E5%88%A9%E7%94%A8m3u8%E6%96%87%E4%BB%B6%E6%9C%BA%E5%88%B6%E6%B7%BB%E5%8A%A0%E7%89%87%E5%A4%B4/</id>
    <published>2023-08-15T09:12:35.000Z</published>
    <updated>2025-06-09T03:33:41.409Z</updated>
    
    <content type="html"><![CDATA[<p><font color=#00b2c2 size=5 face=宋体><strong>利用m3u8文件机制添加片头：</strong></font></p><span id="more"></span><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">set_header</span>(<span class="params">m3u8_file_path, header_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param m3u8_file_path:  m3u8文件所在绝对路径</span></span><br><span class="line"><span class="string">    :param header_path:     视频片头播放绝对路径</span></span><br><span class="line"><span class="string">    :return:   False 片头已经添加， True 片头添加成功</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(m3u8_file_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        all_lines = f.readlines()</span><br><span class="line">        <span class="keyword">for</span> i, item <span class="keyword">in</span> <span class="built_in">enumerate</span>(all_lines):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;#EXTINF:&quot;</span> <span class="keyword">in</span> item:</span><br><span class="line">                vernier = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> header_path <span class="keyword">in</span> all_lines[vernier+<span class="number">1</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;已经添加了片头，请勿重复添加&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="built_in">print</span>(vernier)</span><br><span class="line">        all_lines.insert(vernier, <span class="string">&quot;#EXTINF:5,\n&quot;</span>)   <span class="comment"># 此处的5是时长</span></span><br><span class="line">        all_lines.insert(vernier + <span class="number">1</span>, <span class="string">f&quot;<span class="subst">&#123;header_path&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(m3u8_file_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> w_f:</span><br><span class="line">        <span class="keyword">for</span> k_w <span class="keyword">in</span> all_lines:</span><br><span class="line">            w_f.write(<span class="string">f&quot;<span class="subst">&#123;k_w&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    set_header(<span class="string">&#x27;test.m3u8&#x27;</span>, <span class="string">&quot;http://xxx.xxx.com/wuxing.ts&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#00b2c2 size=5 face=宋体&gt;&lt;strong&gt;利用m3u8文件机制添加片头：&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="_A4-FFmpeg" scheme="https://kanoc.gitee.io/categories/A4-FFmpeg/"/>
    
    <category term="设置片头" scheme="https://kanoc.gitee.io/categories/A4-FFmpeg/%E8%AE%BE%E7%BD%AE%E7%89%87%E5%A4%B4/"/>
    
    
    <category term="ffmpeg" scheme="https://kanoc.gitee.io/tags/ffmpeg/"/>
    
    <category term="python" scheme="https://kanoc.gitee.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>绕过Cloudflare反爬虫机制的五种方法</title>
    <link href="https://kanoc.gitee.io/2023/07/16/%E7%BB%95%E8%BF%87Cloudflare%E5%8F%8D%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://kanoc.gitee.io/2023/07/16/%E7%BB%95%E8%BF%87Cloudflare%E5%8F%8D%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2023-07-15T16:58:01.000Z</published>
    <updated>2025-06-09T04:00:08.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="绕过Cloudflare反爬虫机制的五种方法"><a href="#绕过Cloudflare反爬虫机制的五种方法" class="headerlink" title="绕过Cloudflare反爬虫机制的五种方法"></a>绕过Cloudflare反爬虫机制的五种方法</h1><span id="more"></span><ul><li><p>本文将介绍五种方法，帮助开发者绕过<a href="https://www.cloudbypass.com/">Cloudflare反爬虫</a>机制，包括使用cloudscraper库、抓取谷歌缓存、使用undetected_chromedriver库、使用付费代理和使用穿云API。</p></li><li><p>在爬虫开发中，有时候会遇到浏览器正常访问网站，但是代码却无法获取数据，返回403等错误。以下是解决这个问题的五种方法：</p></li></ul><p><img src="https://s2.loli.net/2023/07/16/qOloz5tsmWiBQRj.jpg" alt="img"></p><h2 id="方法一：cloudscraper"><a href="#方法一：cloudscraper" class="headerlink" title="方法一：cloudscraper"></a><strong>方法一：cloudscraper</strong></h2><p>对于需要等待的网站（通常等待5秒钟），80%的情况下可以确定使用了5秒盾反爬机制。在Python中，可以使用cloudscraper库绕过等待。</p><ul><li>使用方法：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装：cloudscraper</span></span><br><span class="line">pip install cloudscraper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新最新版本：</span></span><br><span class="line">pip install cloudscraper -U　　</span><br></pre></td></tr></table></figure><ul><li>普通使用：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cloudscraper</span><br><span class="line"></span><br><span class="line">scraper=cloudscraper.create_scraper()  <span class="comment"># 创建实例</span></span><br><span class="line">res=scraper.get(url)  <span class="comment"># 请求URL</span></span><br><span class="line"><span class="built_in">print</span>(res.text) <span class="comment"># 打印结果</span></span><br></pre></td></tr></table></figure><ul><li>在Scrapy中使用：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">middlewares.py</span><br><span class="line"><span class="keyword">import</span> cloudscraper</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CloudScraperMiddleware</span>:</span><br><span class="line">defprocess_response(<span class="variable language_">self</span>,request,response,spider):</span><br><span class="line">    ifresponse.status == <span class="number">403</span>:</span><br><span class="line">      url = request.url</span><br><span class="line">      req = spider.scraper.get(url,headers=&#123;‘referer’:url&#125;)</span><br><span class="line">      <span class="keyword">return</span> HtmlResponse(url = url,body = req.text, encoding = ”utf-<span class="number">8</span>″, request = request)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">spider.py</span><br><span class="line"></span><br><span class="line">importcloudscraper</span><br><span class="line"><span class="comment">#启用中间件</span></span><br><span class="line">custom_settings=&#123;</span><br><span class="line">”DOWNLOADER_MIDDLEWARES”:&#123;</span><br><span class="line">’testspider.middlewares.CloudScraperMiddleware’:<span class="number">520</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">def__init__(<span class="variable language_">self</span>,**kwargs):</span><br><span class="line"><span class="comment">#创建实例</span></span><br><span class="line"><span class="variable language_">self</span>.scraper=cloudscraper.create_scraper()　　</span><br></pre></td></tr></table></figure><h2 id="方法二：抓取谷歌缓存"><a href="#方法二：抓取谷歌缓存" class="headerlink" title="方法二：抓取谷歌缓存"></a><strong>方法二：抓取谷歌缓存</strong></h2><p>当谷歌抓取网络以索引网页时，会创建一个缓存。大多数受<a href="https://so.csdn.net/so/search?q=Cloudflare&spm=1001.2101.3001.7020">Cloudflare</a>保护的网站都允许谷歌抓取其网页，因此我们可以抓取这个缓存。</p><ul><li>使用方法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.xxx.com/&quot;</span></span><br><span class="line">new_url = <span class="string">f&quot;https://webcache.googleusercontent.com/search?q=cache:<span class="subst">&#123;url&#125;</span>&quot;</span></span><br><span class="line">response = requests.get(new_url)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment">#提取所需数据　　</span></span><br></pre></td></tr></table></figure><h2 id="方法三：undetected-chromedriver"><a href="#方法三：undetected-chromedriver" class="headerlink" title="方法三：undetected_chromedriver"></a><strong>方法三：undetected_chromedriver</strong></h2><p>如果您使用Selenium抓取网页时被封禁，可以尝试使用undetected_chromedriver库。该库是一个自动化工具，更简单且不容易被封禁，甚至无需下载驱动。</p><ul><li>安装方法：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install undetected-chromedriver</span><br></pre></td></tr></table></figure><ul><li>使用方法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> undetected_chromedriverasuc</span><br><span class="line">url = <span class="string">&quot;https://www.baidu.com/&quot;</span></span><br><span class="line">driver = uc.Chrome()</span><br><span class="line">driver.get(url)</span><br></pre></td></tr></table></figure><h2 id="方法四：使用付费代理"><a href="#方法四：使用付费代理" class="headerlink" title="方法四：使用付费代理"></a><strong>方法四：使用付费代理</strong></h2><p>目前有很多成熟的代理服务可供使用。通过使用付费代理，可以有效绕过Cloudflare的反爬机制。请选择合适的代理服务商，并根据提供的API密钥设置代理。</p><ul><li>使用方法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://xxxx.com/&quot;</span></span><br><span class="line">api_key = <span class="string">&quot;一长串密钥&quot;</span></span><br><span class="line">proxy=<span class="string">f&quot;http://<span class="subst">&#123;api_key&#125;</span>:@proxy.zenrows.com:8001&quot;</span></span><br><span class="line">proxies=&#123;<span class="string">&quot;http&quot;</span>: proxy, <span class="string">&quot;https&quot;</span>: proxy&#125;</span><br><span class="line">response=requests.get(url, proxies=proxies, verify=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#处理响应数据</span></span><br></pre></td></tr></table></figure><h2 id="方法五：使用穿云API"><a href="#方法五：使用穿云API" class="headerlink" title="方法五：使用穿云API"></a><strong>方法五：使用穿云API</strong></h2><p>　　穿云API是一个可以绕过Cloudflare的反机器人验证、CAPTCHA验证、WAF和CC防护的解决方案。它提供了HTTPAPI和代理功能，并可设置Referer、浏览器UA和headless状态等浏览器指纹设备特征。</p><p>　　使用穿云API可以轻松<a href="https://www.cloudbypass.com/">绕过Cloudflare验证</a>，即使需要发送大量请求也不必担心被识别为抓取者。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;绕过Cloudflare反爬虫机制的五种方法&quot;&gt;&lt;a href=&quot;#绕过Cloudflare反爬虫机制的五种方法&quot; class=&quot;headerlink&quot; title=&quot;绕过Cloudflare反爬虫机制的五种方法&quot;&gt;&lt;/a&gt;绕过Cloudflare反爬虫机制的五种方法&lt;/h1&gt;</summary>
    
    
    
    <category term="_A7-逆向" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/"/>
    
    <category term="Cloudflare" scheme="https://kanoc.gitee.io/categories/A7-%E9%80%86%E5%90%91/Cloudflare/"/>
    
    
    <category term="逆向" scheme="https://kanoc.gitee.io/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="记录" scheme="https://kanoc.gitee.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
    <category term="Cloudflare" scheme="https://kanoc.gitee.io/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>Typora、Qv2ray、Typora、Uninstaller</title>
    <link href="https://kanoc.gitee.io/2023/07/11/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7/"/>
    <id>https://kanoc.gitee.io/2023/07/11/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7/</id>
    <published>2023-07-11T05:52:53.000Z</published>
    <updated>2025-06-09T07:58:13.177Z</updated>
    
    <content type="html"><![CDATA[<h2 id="必备工具获取、下载"><a href="#必备工具获取、下载" class="headerlink" title="必备工具获取、下载"></a>必备工具获取、下载</h2><span id="more"></span><h4 id="1、Typora-版本v1-0"><a href="#1、Typora-版本v1-0" class="headerlink" title="1、Typora 版本v1.0"></a>1、Typora 版本v1.0</h4><ul><li><a href="https://bd.bcebos.com/v1/xly-icafe/typora-0.9.9.34.1-20230711135144-mzvutn.dmg"><code>Mac Os</code>版下载</a></li><li><a href="https://bd.bcebos.com/v1/xly-icafe/typora-setup-x64-20230711135722-voidbp.exe"><code>windows</code>版下载</a></li></ul><br><hr><br><h4 id="2、Pycharm专业版-激活"><a href="#2、Pycharm专业版-激活" class="headerlink" title="2、Pycharm专业版+激活"></a>2、Pycharm专业版+激活</h4><ul><li><p>官方渠道下载 IDE： <a href="https://www.jetbrains.com/pycharm/download/other.html"><code>点击进入</code></a></p></li><li><p>亲测可用：<code>mac2021激活</code><a href="https://bd.bcebos.com/v1/xly-icafe/macjihuo-20230714173437-xqdtdy.zip">点击下载</a></p></li><li><p><a href="https://bd.bcebos.com/v1/xly-icafe/linux-20230711135957-rf7v0e.zip"><code>linux</code> zip版下载</a></p></li><li><p><a href="https://bd.bcebos.com/v1/xly-icafe/mac-20230711140244-5mamhz.zip"><code>Mac</code> zip版下载</a></p></li><li><p><a href="https://bd.bcebos.com/v1/xly-icafe/windows-20230711140345-2wukes.zip"><code>windows</code> zip版下载</a></p></li><li><p><font color=#f26522 size=4 face=宋体><strong><strong>Pycharm激活教程:      <a href="https://www.yuque.com/lanchuan-vm6pi/buhvby/irtn6mlnmt1vuzgx?singleDoc">点击进入</a></strong></strong></font></p></li><li><p><font color=#f26522 size=4 face=宋体><strong><strong>二次购买：Pycharm激活教程:      [点击进入](<a href="https://www.yuque.com/ningmengna-6ulrv/pfdno5/qtzl0p93s0icva9d">激活教程-mac版，支持2017-2023所有专业版 (yuque.com)</a>)</strong></strong></font></p></li></ul><br><hr><br><h4 id="3、Qv2ray-主程序-核心"><a href="#3、Qv2ray-主程序-核心" class="headerlink" title="3、Qv2ray 主程序 + 核心"></a>3、Qv2ray 主程序 + 核心</h4><ul><li><p><a href="https://bd.bcebos.com/v1/xly-icafe/qv2ray_%E7%AE%80%E6%98%93%E5%AE%89%E8%A3%85%20%E7%A8%8B%E5%BA%8F%E4%B8%89%E7%AB%AF-20230711145621-gvow7b.zip">Qv2ray_简易安装 程序三端</a></p></li><li><p><a href="https://github.com/Qv2ray/Qv2ray/releases">Qv2ray 主程序下载</a></p></li><li><p><a href="https://github.com/v2ray/v2ray-core/releases">QV2ray_核心下载</a></p></li><li><p>QV2ray 各类插件下载</p><ul><li><p>插件 ：<a href="https://github.com/Qv2ray/QvPlugin-Trojan/releases/tag/v3.0.0-pre3">Trojan</a></p></li><li><p>插件 ：<a href="https://github.com/Qv2ray/QvPlugin-SSR/releases/tag/v3.0.0-pre3">SSR</a></p></li><li><p>插件 ：<a href="https://github.com/Qv2ray/QvPlugin-NaiveProxy/releases/tag/v3.0.0-pre3">NaiveProxy</a></p></li><li><p>插件 ：<a href="https://github.com/Qv2ray/QvPlugin-Trojan-Go/releases/tag/v3.0.0-pre3">Trojan-Go</a></p></li><li><p>插件 ：<a href="https://github.com/Qv2ray/QvPlugin-SS/releases/tag/v3.0.0-pre3">SS</a></p></li><li><p>插件 ：<a href="https://github.com/Qv2ray/QvPlugin-Command/releases/tag/v3.0.0-pre3">Command</a></p></li></ul></li></ul><br><hr><br><h4 id="4、mysql安装下载网址"><a href="#4、mysql安装下载网址" class="headerlink" title="4、mysql安装下载网址"></a>4、mysql安装下载网址</h4><ul><li><a href="https://downloads.mysql.com/archives/community/"><code>mysql安装下载网址</code></a></li></ul><br><hr><br><h4 id="5、App-Cleaner-Uninstaller-for-mac-mac应用清理和卸载软件-v8-2-1中文激活版"><a href="#5、App-Cleaner-Uninstaller-for-mac-mac应用清理和卸载软件-v8-2-1中文激活版" class="headerlink" title="5、App Cleaner &amp; Uninstaller for mac(mac应用清理和卸载软件)v8.2.1中文激活版"></a>5、App Cleaner &amp; Uninstaller for mac(mac应用清理和卸载软件)v8.2.1中文激活版</h4><p><a href="https://bd.bcebos.com/v1/xly-icafe/app%20cleaner%20%26%20uninstaller%20for%20mac%28mac%E5%BA%94%E7%94%A8%E6%B8%85%E7%90%86%E5%92%8C%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%29v8.2.1%E4%B8%AD%E6%96%87%E6%BF%80%E6%B4%BB%E7%89%88-20230713200358-ylswgj.dmg"><code>App Cleaner &amp; Uninstaller_激活版下载</code></a></p><br><hr><br><h4 id="6、mysql安装下载网址"><a href="#6、mysql安装下载网址" class="headerlink" title="6、mysql安装下载网址"></a>6、mysql安装下载网址</h4><ul><li><a href="https://downloads.mysql.com/archives/community/"><code>mysql安装下载网址</code></a></li></ul><br><hr><br><h4 id="7、fanmugua-HttpCanary-安卓抓包工具"><a href="#7、fanmugua-HttpCanary-安卓抓包工具" class="headerlink" title="7、fanmugua + HttpCanary(安卓抓包工具)"></a>7、fanmugua + HttpCanary(安卓抓包工具)</h4><p><a href="https://bd.bcebos.com/v1/xly-icafe/%E7%95%AA%E6%9C%A8%E7%93%9C%2B%E6%89%8B%E6%9C%BAapk%E6%8A%93%E5%8C%85-20230928122154-gnuj5h.zip"><code>fanmugua + HttpCanary(安卓抓包工具)</code></a></p><br><hr><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;必备工具获取、下载&quot;&gt;&lt;a href=&quot;#必备工具获取、下载&quot; class=&quot;headerlink&quot; title=&quot;必备工具获取、下载&quot;&gt;&lt;/a&gt;必备工具获取、下载&lt;/h2&gt;</summary>
    
    
    
    <category term="_A8-工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/"/>
    
    <category term="其他工具" scheme="https://kanoc.gitee.io/categories/A8-%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="必备工具" scheme="https://kanoc.gitee.io/tags/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
